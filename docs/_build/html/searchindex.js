Search.setIndex({"docnames": ["index", "modules", "src", "src.clf", "src.clf.constants", "src.clf.create_data", "src.clf.dt_training", "src.clf.evaluation_classified", "src.clf.evaluation_masked", "src.clf.evaluation_mimic", "src.clf.lr_training", "src.clf.old_train_lr_all", "src.clf.predict", "src.clf.rf_training", "src.clf.svm_training", "src.clf.utils", "src.clf.xgboost_training", "src.decorators", "src.icd_mimic", "src.icd_mimic.constants", "src.icd_mimic.prepare_mimic", "src.nlp", "src.nlp.constants", "src.nlp.create_data_mimic", "src.nlp.create_data_mtsamples", "src.nlp.mlm_keybert_mtsamples", "src.nlp.mlm_training_mimic", "src.nlp.mlm_training_mtsamples", "src.nlp.predict", "src.nlp.sc_keybert_mimic", "src.nlp.sc_keybert_mtsamples", "src.nlp.sc_training_mimic", "src.nlp.sc_training_mtsamples", "src.nlp.utils", "src.streamlit", "src.streamlit.app", "src.streamlit.app_clf", "src.streamlit.app_nlp", "src.streamlit.app_stt", "src.stt", "src.stt.analyze_data", "src.stt.constants", "src.stt.create_data", "src.stt.evaluate_model", "src.stt.hubert_training", "src.stt.predict", "src.stt.transform_speech_data", "src.stt.utils", "src.stt.wav2vec2_training"], "filenames": ["index.rst", "modules.rst", "src.rst", "src.clf.rst", "src.clf.constants.rst", "src.clf.create_data.rst", "src.clf.dt_training.rst", "src.clf.evaluation_classified.rst", "src.clf.evaluation_masked.rst", "src.clf.evaluation_mimic.rst", "src.clf.lr_training.rst", "src.clf.old_train_lr_all.rst", "src.clf.predict.rst", "src.clf.rf_training.rst", "src.clf.svm_training.rst", "src.clf.utils.rst", "src.clf.xgboost_training.rst", "src.decorators.rst", "src.icd_mimic.rst", "src.icd_mimic.constants.rst", "src.icd_mimic.prepare_mimic.rst", "src.nlp.rst", "src.nlp.constants.rst", "src.nlp.create_data_mimic.rst", "src.nlp.create_data_mtsamples.rst", "src.nlp.mlm_keybert_mtsamples.rst", "src.nlp.mlm_training_mimic.rst", "src.nlp.mlm_training_mtsamples.rst", "src.nlp.predict.rst", "src.nlp.sc_keybert_mimic.rst", "src.nlp.sc_keybert_mtsamples.rst", "src.nlp.sc_training_mimic.rst", "src.nlp.sc_training_mtsamples.rst", "src.nlp.utils.rst", "src.streamlit.rst", "src.streamlit.app.rst", "src.streamlit.app_clf.rst", "src.streamlit.app_nlp.rst", "src.streamlit.app_stt.rst", "src.stt.rst", "src.stt.analyze_data.rst", "src.stt.constants.rst", "src.stt.create_data.rst", "src.stt.evaluate_model.rst", "src.stt.hubert_training.rst", "src.stt.predict.rst", "src.stt.transform_speech_data.rst", "src.stt.utils.rst", "src.stt.wav2vec2_training.rst"], "titles": ["Welcome to Masterthesis\u2019s documentation!", "src", "src package", "src.clf package", "src.clf.constants module", "src.clf.create_data module", "src.clf.dt_training module", "src.clf.evaluation_classified module", "src.clf.evaluation_masked module", "src.clf.evaluation_mimic module", "src.clf.lr_training module", "src.clf.old_train_lr_all module", "src.clf.predict module", "src.clf.rf_training module", "src.clf.svm_training module", "src.clf.utils module", "src.clf.xgboost_training module", "src.decorators module", "src.icd_mimic package", "src.icd_mimic.constants module", "src.icd_mimic.prepare_mimic module", "src.nlp package", "src.nlp.constants module", "src.nlp.create_data_mimic module", "src.nlp.create_data_mtsamples module", "src.nlp.mlm_keybert_mtsamples module", "src.nlp.mlm_training_mimic module", "src.nlp.mlm_training_mtsamples module", "src.nlp.predict module", "src.nlp.sc_keybert_mimic module", "src.nlp.sc_keybert_mtsamples module", "src.nlp.sc_training_mimic module", "src.nlp.sc_training_mtsamples module", "src.nlp.utils module", "src.streamlit package", "src.streamlit.app module", "src.streamlit.app_clf module", "src.streamlit.app_nlp module", "src.streamlit.app_stt module", "src.stt package", "src.stt.analyze_data module", "src.stt.constants module", "src.stt.create_data module", "src.stt.evaluate_model module", "src.stt.hubert_training module", "src.stt.predict module", "src.stt.transform_speech_data module", "src.stt.utils module", "src.stt.wav2vec2_training module"], "terms": {"src": 0, "packag": [0, 1], "subpackag": [0, 1], "submodul": [0, 1], "modul": [0, 1], "index": 0, "search": [0, 6, 10, 11, 13, 14, 16], "page": 0, "clf": [1, 2], "content": 1, "icd_mim": [1, 2], "nlp": [1, 2, 5, 11, 37], "streamlit": [1, 2], "stt": [1, 2], "decor": [1, 2], "log_function_nam": [1, 2, 17], "constant": [2, 3, 18, 21, 39], "create_data": [2, 3, 39], "main": [2, 3, 5, 7, 8, 9, 11, 12, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40], "replace_tab": [2, 3, 5, 11], "transform_column": [2, 3, 5, 11], "dt_train": [2, 3], "build_pipelin": [2, 3, 6, 10, 11, 13, 14, 16], "custom_accuracy_funct": [2, 3, 6, 10, 11, 13, 14, 16], "grid_search": [2, 3, 6, 10, 11, 13, 14, 16], "evaluation_classifi": [2, 3], "collect_pr": [2, 3, 7, 8, 9, 11], "compute_accuraci": [2, 3, 7, 8, 9, 11], "compute_mrr_at_k": [2, 3, 7, 8, 9, 11], "get_top_k_predict": [2, 3, 7, 8, 9, 11], "reciprocal_rank": [2, 3, 7, 8, 9], "evaluation_mask": [2, 3], "evaluation_mim": [2, 3], "lr_train": [2, 3], "old_train_lr_al": [2, 3], "fit_model": [2, 3, 11], "get_model_metr": [2, 3, 11], "load_data": [2, 3, 11, 15], "predict": [2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 16, 21, 26, 27, 31, 32, 36, 39, 43, 47], "feat_imp": [2, 3, 12], "lime_explain": [2, 3, 12, 34, 36], "predict_prob": [2, 3, 12, 34, 36], "top_symptom": [2, 3, 12, 34, 36], "rf_train": [2, 3], "svm_train": [2, 3], "util": [2, 3, 21, 39], "preprocessing_pipelin": [2, 3, 6, 10, 13, 14, 15, 16], "xgboost_train": [2, 3], "prepare_mim": [2, 18], "clean_icd9": [2, 18, 20], "clean_mimic_diagnos": [2, 18, 20], "clean_mimic_noteev": [2, 18, 20], "merge_diagnoses_icd9": [2, 18, 20], "merge_diagnoses_noteev": [2, 18, 20], "save_df": [2, 18, 20, 21, 24], "create_data_mim": [2, 21], "clean_text": [2, 21, 23], "keep_only_text_from_choosen_head": [2, 21, 23], "create_data_mtsampl": [2, 21], "cleaning_input": [2, 21, 24, 33], "create_df": [2, 21, 24], "create_dir": [2, 21, 24, 39, 40], "top_class": [2, 21, 24], "mlm_keybert_mtsampl": [2, 21], "calculate_optimal_candidate_nr": [2, 21, 25, 29, 30], "keyword_extract": [2, 21, 25, 29, 30, 34, 37], "keywords_from_model": [2, 21, 25, 29, 30], "save_datafram": [2, 21, 25, 29, 30], "small_column_df": [2, 21, 25, 29, 30], "mlm_training_mim": [2, 21], "compute_metr": [2, 21, 26, 27, 31, 32, 39, 47], "load_dataset": [2, 21, 26, 27, 31, 32, 39, 47], "load_train": [2, 21, 26, 27, 31, 32, 39, 47], "tokenize_dataset": [2, 21, 26, 27, 31, 32], "tokenize_funct": [2, 21, 26, 31, 33], "mlm_training_mtsampl": [2, 21], "load_model": [2, 21, 27, 31, 32, 39, 44, 48], "remove_most_common": [2, 21, 27], "max_length": [2, 21, 28, 47], "sc_keybert_mim": [2, 21], "sc_keybert_mtsampl": [2, 21], "sc_training_mim": [2, 21], "clean_remove_column": [2, 21, 31, 32], "map_medical_specialty_to_label": [2, 21, 31, 32], "sc_training_mtsampl": [2, 21], "get_devic": [2, 21, 33, 39, 47], "load_token": [2, 21, 33], "load_training_arg": [2, 21, 33, 39, 47], "app": [2, 34, 36, 37, 38], "app_clf": [2, 34], "clf_main": [2, 34, 36], "get_word": [2, 34, 36], "app_nlp": [2, 34], "load_keybert": [2, 34, 37], "nlp_main": [2, 34, 37], "app_stt": [2, 34], "load_pipelin": [2, 34, 38], "stt_main": [2, 34, 38], "analyze_data": [2, 39], "create_chart": [2, 39, 40], "evaluate_audio_sampl": [2, 39, 40], "get_librosa_featur": [2, 39, 40], "load_datafram": [2, 39, 40], "load_train_val_test_data": [2, 39, 40], "make_report": [2, 39, 40], "save_report": [2, 39, 40], "transform_datafram": [2, 39, 40], "clean_df": [2, 39, 42], "copy_fil": [2, 39, 42], "create_own_dataset": [2, 39, 42], "get_wav_file_dur": [2, 39, 42], "evaluate_model": [2, 39], "get_test_result": [2, 39, 43], "load_test_data": [2, 39, 43], "map_to_result": [2, 39, 43], "show_random_el": [2, 39, 43], "showcase_test": [2, 39, 43], "hubert_train": [2, 39], "transcribe_audio": [2, 39, 45], "transform_speech_data": [2, 39], "create_labels_and_input_valu": [2, 39, 46], "create_vocab": [2, 39, 46], "preprocess_data": [2, 39, 46], "recreate_fold": [2, 39, 46], "remove_special_charact": [2, 39, 46], "save_dataset": [2, 39, 46], "transform_dataset": [2, 39, 46], "datacollatorctcwithpad": [2, 39, 47], "eearlystoppingcallbackafternumepoch": [2, 39, 47], "load_processor": [2, 39, 47], "load_trained_model_and_processor_hubert": [2, 39, 47], "load_trained_model_and_processor_wav2vec2": [2, 39, 47], "wav2vec2_train": [2, 39], "descript": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48], "thi": [4, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 41], "contain": [4, 19, 20, 22, 41], "us": [4, 5, 12, 15, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 40, 41, 43, 44, 45, 46, 47, 48], "folder": [4, 40, 41, 42, 46], "load": [5, 11, 15, 26, 27, 31, 32, 33, 37, 38, 40, 43, 44, 47, 48], "data": [5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 20, 23, 24, 26, 27, 31, 32, 40, 42, 43, 44, 45, 46, 47, 48], "transform": [5, 11, 40, 43, 46, 47], "format": [5, 42], "can": 5, "classifi": [5, 7], "function": [5, 7, 8, 9, 11, 12, 15, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 47], "x": [5, 11, 15, 25, 28, 29, 30, 36, 40], "list": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 23, 24, 25, 29, 30, 33, 36, 37, 40, 42], "str": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 42, 43, 46, 47], "replac": 5, "space": 5, "underscor": 5, "paramet": [5, 6, 10, 11, 13, 14, 15, 16, 17, 20, 23, 24, 26, 27, 28, 31, 32, 33, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48], "word": [5, 24, 27, 33], "separ": 5, "return": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48], "concaten": [5, 40], "type": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48], "df": [5, 11, 20, 24, 25, 27, 29, 30, 40, 42], "datafram": [5, 11, 12, 20, 24, 25, 27, 29, 30, 31, 32, 36, 40, 42], "column_nam": [5, 11], "column": [5, 11, 24, 25, 29, 30, 31, 32, 40, 42], "pd": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 24, 25, 29, 30, 31, 32, 36, 40, 42], "label": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 31, 32, 36, 40, 43, 46], "featur": [5, 11, 12, 36, 40, 47], "name": [5, 11, 17, 25, 29, 30, 40, 42], "train": [6, 10, 11, 12, 13, 14, 16, 24, 26, 27, 31, 32, 33, 36, 40, 42, 43, 44, 46, 47, 48], "decis": 6, "tree": 6, "model": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 43, 44, 45, 46, 47, 48], "probabl": [6, 10, 11, 12, 13, 14, 16, 36], "medic": [6, 10, 11, 12, 13, 14, 16, 25, 29, 30, 31, 32], "specialti": [6, 10, 11, 13, 14, 16, 31, 32], "usag": [6, 10, 11, 13, 14, 16, 40, 42, 43, 44, 45, 46, 48], "python": [6, 10, 13, 14, 16, 40, 42, 43, 44, 45, 46, 48], "py": [6, 10, 12, 13, 14, 16, 36, 40, 42, 43, 44, 45, 46, 48], "possibl": [6, 10, 11, 13, 14, 16, 42, 43, 44, 45, 46, 48], "argument": [6, 10, 11, 13, 14, 16, 26, 27, 31, 32, 33, 42, 43, 44, 45, 46, 47, 48], "g": [6, 10, 13, 14, 16], "gridsearch": [6, 10, 13, 14, 16], "run": [6, 10, 13, 14, 16, 25, 29, 30], "pipelin": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 36, 37, 38, 45], "build": [6, 10, 11, 13, 14, 16], "preprocess": [6, 10, 13, 14, 15, 16, 46], "step": [6, 10, 13, 14, 15, 16], "x_train": [6, 10, 11, 13, 14, 16], "seri": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 25, 29, 30, 36, 40], "y_train": [6, 10, 11, 13, 14, 16], "float": [6, 7, 8, 9, 10, 11, 13, 14, 16, 25, 26, 27, 29, 30, 31, 32, 37, 40, 42, 47], "custom": [6, 10, 11, 13, 14, 16, 28], "scorer": [6, 10, 11, 13, 14, 16], "accuraci": [6, 7, 8, 9, 10, 11, 13, 14, 16, 26, 27, 31, 32], "3": [6, 10, 11, 13, 14, 16], "x_test": [6, 7, 8, 9, 10, 11, 13, 14, 16], "test": [6, 7, 8, 9, 10, 11, 13, 14, 16, 40, 42, 43, 46], "y_test": [6, 7, 8, 9, 10, 11, 13, 14, 16], "model_pipelin": [6, 10, 11, 13, 14, 16], "param_grid": [6, 10, 11, 13, 14, 16], "dict": [6, 10, 12, 13, 14, 16, 26, 27, 31, 32, 36, 47], "sequenc": [6, 13, 26, 27, 31, 32], "object": [6, 13, 14, 47], "grid": [6, 10, 11, 13, 14, 16], "best": [6, 10, 11, 12, 13, 14, 16, 36], "compar": [7, 8, 9], "perform": [7, 8, 9, 47], "differ": [7, 8, 9, 40], "y_pred": [7, 8, 9, 11], "collect": [7, 8, 9, 11], "all": [7, 8, 9, 11, 19, 22, 31, 32, 33], "ground": [7, 8, 9, 11], "truth": [7, 8, 9, 11], "param": [7, 8, 9, 12, 14, 16, 25, 29, 30, 36], "true": [7, 8, 9, 11, 46, 47], "machin": [7, 8, 9, 11, 14], "eval_item": [7, 8, 9, 11], "comput": [7, 8, 9, 11, 26, 27, 31, 32, 47], "cutoff": [7, 8, 9, 11], "k": [7, 8, 9, 11], "tupl": [7, 8, 9, 11, 15, 25, 26, 27, 29, 30, 31, 32, 37, 40, 42, 46, 47], "item": [7, 8, 9, 11], "mrr": [7, 8, 9, 11], "averag": [7, 8, 9, 11], "rr": [7, 8, 9, 11], "int": [7, 8, 9, 11, 16, 25, 29, 30, 37, 40, 43, 47], "get": [7, 8, 9, 11, 12, 33, 36, 40, 42, 47], "top": [7, 8, 9, 11, 12, 24, 36], "each": [7, 8, 9, 11, 12, 25, 29, 30, 36], "sampl": [7, 8, 9, 11, 12, 36, 40], "number": [7, 8, 9, 11, 24, 25, 29, 30, 33, 37, 43, 47], "true_label": [7, 8, 9], "machine_pr": [7, 8, 9], "reciproc": [7, 8, 9], "rank": [7, 8, 9], "mask": [8, 9, 26, 27, 31, 32], "logist": [10, 11], "regress": [10, 11], "analyz": 11, "countvector": 11, "imblearn": [11, 12, 36], "core": [11, 15, 42], "fit": 11, "best_model": 11, "classif": [11, 13, 14, 16, 26, 27, 31, 32, 36], "report": [11, 40], "gridsearchcv": 11, "file_path": [11, 40, 42], "from": [11, 12, 15, 20, 23, 24, 25, 27, 29, 30, 31, 32, 36, 37, 40, 42, 43, 45, 46, 47], "csv": [11, 15, 20, 24, 25, 29, 30, 31, 32, 40, 42], "file": [11, 15, 20, 24, 25, 29, 30, 31, 32, 33, 40, 42, 45, 46], "path": [11, 15, 20, 24, 25, 26, 27, 29, 30, 31, 32, 40, 42, 43, 46, 47], "save": [12, 20, 24, 25, 29, 30, 33, 40, 42, 44, 46, 48], "show": [12, 43], "per": 12, "class": [12, 24, 27, 31, 32, 36, 47], "gener": 12, "import": 12, "input": [12, 24, 25, 26, 28, 29, 30, 31, 33, 37, 46, 47], "valu": [12, 24, 36, 46], "symptom": [12, 36], "random": [13, 43], "forest": 13, "linear": 14, "support": 14, "vector": 14, "helper": [15, 47], "ar": [15, 24, 33, 42, 47], "multipl": [15, 47], "place": [15, 47], "filepath": 15, "panda": [15, 40, 42], "y": [15, 40], "creat": [15, 24, 40, 46], "xgboost": 16, "log": 17, "f": 17, "callabl": 17, "p": 17, "r": 17, "script": [19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 44, 48], "project": [19, 22, 36, 38], "merg": 20, "mimic": [20, 23, 26], "icd9": 20, "own": 20, "research": 20, "clean": [20, 23, 24, 33, 42], "diagnos": 20, "iii": [20, 23, 26], "noteev": 20, "The": [20, 24, 26, 27, 31, 32, 33], "df_mimic_diagnos": 20, "df_icd9": 20, "df_diagnoses_icd9": 20, "df_mimic_noteev": 20, "subject_id": 20, "hadm_id": 20, "code": 20, "none": [20, 24, 25, 28, 29, 30, 31, 32, 36, 38, 40, 42, 43, 45, 46, 47], "dataset": [23, 24, 26, 27, 31, 32, 40, 42, 43, 46, 47], "text": [23, 25, 27, 28, 29, 30, 31, 32, 36, 37, 38], "chosen_head": 23, "keep": [23, 24], "onli": [23, 24, 31, 32], "choosen": 23, "header": 23, "mtsampl": [24, 27, 31, 32], "sentenc": [24, 25, 29, 30, 33, 37], "remov": [24, 27, 31, 32, 33, 42, 46], "stopword": [24, 33], "punctuat": [24, 33], "lemmat": [24, 33], "drop": 24, "nan": 24, "appli": 24, "keyword": [24, 25, 29, 30, 37], "work": 24, "without": 24, "directori": [24, 27, 33, 40, 47], "doe": [24, 40], "exist": [24, 40, 46], "where": [24, 46], "11": 24, "base": [24, 27, 47], "count": 24, "reason": 24, "i": [24, 25, 27, 28, 29, 30, 31, 32, 40], "other": 24, "too": [24, 42], "few": 24, "extract": [25, 29, 30, 37], "transcript": [25, 29, 30, 38, 45], "calcul": [25, 29, 30], "optim": [25, 29, 30], "candid": [25, 29, 30, 37], "nr_candid": [25, 29, 30, 37], "top_n": [25, 29, 30, 37], "weight": [25, 29, 30, 37], "input_column_nam": [25, 29, 30], "output_column_nam": [25, 29, 30], "tc": [25, 29, 30], "final": [25, 29, 30], "make": [25, 29, 30], "smaller": [25, 29, 30], "than": [25, 28, 29, 30], "512": [25, 28, 29, 30], "token": [25, 26, 27, 28, 29, 30, 31, 32, 33, 47], "mlm": [26, 27], "eval_pr": [26, 27, 31, 32], "evalpredict": [26, 27, 31, 32, 47], "evalu": [26, 27, 31, 32, 40, 43, 47], "modeltyp": [26, 27, 31, 32], "languag": [26, 27, 31, 32], "score": [26, 27, 31, 32], "data_path": [26, 27, 31, 32, 43, 47], "arrow_dataset": [26, 27, 31, 32, 46, 47], "valid": [26, 27, 31, 32, 40, 42, 46, 47], "automodelforsequenceclassif": [26, 27, 31, 32], "training_arg": [26, 27, 31, 32, 47], "trainingargu": [26, 27, 31, 32, 33, 47], "train_d": [26, 27, 31, 32, 46, 47], "val_d": [26, 27, 31, 32, 46, 47], "autotoken": [26, 27, 31, 32, 33], "trainer": [26, 27, 31, 32, 47], "encod": [26, 27, 31, 32], "set": [26, 27, 31, 32, 42, 43], "batch": [26, 31, 33, 43, 46, 47], "special_token": [26, 31, 33], "bool": [26, 31, 33, 40, 46, 47], "whether": [26, 31, 33], "add": [26, 31, 33], "special": [26, 31, 33, 46], "It": 27, "huggingfac": [27, 31, 32], "devic": [27, 31, 32, 33, 43, 44, 47, 48], "bertformaskedlm": 27, "checkpoint": [27, 33, 47], "torch": [27, 31, 32, 33, 43, 44, 47, 48], "most": 27, "common": 27, "check": [28, 46, 47], "longer": 28, "If": 28, "truncat": 28, "tokenized_dataset": [31, 32], "unned": [31, 32], "need": [31, 32], "read": [31, 32], "map": [31, 32, 43], "ha": 33, "which": 33, "mutipl": 33, "handmadestopword": 33, "output_dir": [33, 47], "implement": [36, 38], "part": [36, 37, 38], "feat_import": 36, "kw_model": 37, "keybert": 37, "str_nlp": 37, "speech": [37, 38, 42, 45, 46], "output": [37, 47], "audio": [38, 40, 45, 46], "on_evalu": [39, 47], "pdf": 40, "about": 40, "col_us": 40, "titl": 40, "xlabel": 40, "ylabel": 40, "hist": 40, "file_nam": 40, "chart": 40, "visual": 40, "between": 40, "val": 40, "flag": 40, "indic": 40, "histogram": 40, "row": 40, "numpi": 40, "ndarrai": 40, "durat": [40, 42], "wav": [40, 42], "arrai": 40, "rate": 40, "np": 40, "filenam": 40, "folder_path": [40, 46], "profilereport": 40, "profil": 40, "an": [40, 45], "html": 40, "creation": 42, "split": 42, "record": 42, "filter": 42, "out": 42, "long": 42, "create_speech_data": 42, "": [42, 44, 46, 48], "adjust": 42, "ad": 42, "requir": 42, "new": 42, "respect": 42, "copi": 42, "files_list": 42, "raw": 42, "frame": 42, "second": 42, "h": [43, 45], "w": [43, 45], "hubert": [43, 44, 45, 47], "wav2vec2": [43, 45, 46, 47, 48], "result": 43, "wer_metr": 43, "evaluationmodul": 43, "cer_metr": 43, "print": 43, "wer": 43, "cer": 43, "metric": [43, 47], "exampl": [43, 46], "union": [43, 47], "hubertforctc": [43, 44, 47], "wav2vec2forctc": [43, 47, 48], "processor": [43, 44, 46, 47, 48], "wav2vec2processor": [43, 44, 46, 47, 48], "num_exampl": 43, "5": 43, "option": [43, 46, 47], "default": [43, 46], "test_d": [43, 46], "showcas": 43, "pad": [43, 47], "decod": 43, "pipe": 45, "rec": 45, "recogn": 45, "transcrib": 45, "microphon": 45, "recognit": 45, "sr": 45, "processing_wav2vec2": [46, 47], "vocab": 46, "charact": 46, "resampl": 46, "16khz": 46, "recreat": 46, "belong": 46, "process": [46, 47], "max_length_label": 47, "pad_to_multiple_of": 47, "pad_to_multiple_of_label": 47, "collat": 47, "dynam": 47, "receiv": 47, "start_epoch": 47, "arg": 47, "kwarg": 47, "earlystoppingcallback": 47, "callback": 47, "stop": 47, "after": 47, "epoch": 47, "inherit": 47, "state": 47, "trainerst": 47, "control": 47, "trainercontrol": 47, "should": 47, "pred": 47, "dure": 47, "processor_path": 47, "extractor": 47, "modeling_hubert": 47, "modeling_wav2vec2": 47, "data_col": 47, "batch_size_train": 47, "batch_size_v": 47, "num_epoch": 47, "size": 47}, "objects": {"": [[2, 0, 0, "-", "src"]], "src": [[3, 0, 0, "-", "clf"], [17, 0, 0, "-", "decorators"], [18, 0, 0, "-", "icd_mimic"], [21, 0, 0, "-", "nlp"], [34, 0, 0, "-", "streamlit"], [39, 0, 0, "-", "stt"]], "src.clf": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "create_data"], [6, 0, 0, "-", "dt_training"], [7, 0, 0, "-", "evaluation_classified"], [8, 0, 0, "-", "evaluation_masked"], [9, 0, 0, "-", "evaluation_mimic"], [10, 0, 0, "-", "lr_training"], [11, 0, 0, "-", "old_train_lr_all"], [12, 0, 0, "-", "predict"], [13, 0, 0, "-", "rf_training"], [14, 0, 0, "-", "svm_training"], [15, 0, 0, "-", "utils"], [16, 0, 0, "-", "xgboost_training"]], "src.clf.create_data": [[5, 1, 1, "", "main"], [5, 1, 1, "", "replace_tab"], [5, 1, 1, "", "transform_column"]], "src.clf.dt_training": [[6, 1, 1, "", "build_pipeline"], [6, 1, 1, "", "custom_accuracy_function"], [6, 1, 1, "", "grid_search"]], "src.clf.evaluation_classified": [[7, 1, 1, "", "collect_preds"], [7, 1, 1, "", "compute_accuracy"], [7, 1, 1, "", "compute_mrr_at_k"], [7, 1, 1, "", "get_top_k_predictions"], [7, 1, 1, "", "main"], [7, 1, 1, "", "reciprocal_rank"]], "src.clf.evaluation_masked": [[8, 1, 1, "", "collect_preds"], [8, 1, 1, "", "compute_accuracy"], [8, 1, 1, "", "compute_mrr_at_k"], [8, 1, 1, "", "get_top_k_predictions"], [8, 1, 1, "", "main"], [8, 1, 1, "", "reciprocal_rank"]], "src.clf.evaluation_mimic": [[9, 1, 1, "", "collect_preds"], [9, 1, 1, "", "compute_accuracy"], [9, 1, 1, "", "compute_mrr_at_k"], [9, 1, 1, "", "get_top_k_predictions"], [9, 1, 1, "", "main"], [9, 1, 1, "", "reciprocal_rank"]], "src.clf.lr_training": [[10, 1, 1, "", "build_pipeline"], [10, 1, 1, "", "custom_accuracy_function"], [10, 1, 1, "", "grid_search"]], "src.clf.old_train_lr_all": [[11, 1, 1, "", "build_pipeline"], [11, 1, 1, "", "collect_preds"], [11, 1, 1, "", "compute_accuracy"], [11, 1, 1, "", "compute_mrr_at_k"], [11, 1, 1, "", "custom_accuracy_function"], [11, 1, 1, "", "fit_model"], [11, 1, 1, "", "get_model_metrics"], [11, 1, 1, "", "get_top_k_predictions"], [11, 1, 1, "", "grid_search"], [11, 1, 1, "", "load_data"], [11, 1, 1, "", "main"], [11, 1, 1, "", "replace_tab"], [11, 1, 1, "", "transform_column"]], "src.clf.predict": [[12, 1, 1, "", "feat_imp"], [12, 1, 1, "", "lime_explainer"], [12, 1, 1, "", "main"], [12, 1, 1, "", "predict_probability"], [12, 1, 1, "", "top_symptoms"]], "src.clf.rf_training": [[13, 1, 1, "", "build_pipeline"], [13, 1, 1, "", "custom_accuracy_function"], [13, 1, 1, "", "grid_search"]], "src.clf.svm_training": [[14, 1, 1, "", "build_pipeline"], [14, 1, 1, "", "custom_accuracy_function"], [14, 1, 1, "", "grid_search"]], "src.clf.utils": [[15, 1, 1, "", "load_data"], [15, 1, 1, "", "preprocessing_pipeline"]], "src.clf.xgboost_training": [[16, 1, 1, "", "build_pipeline"], [16, 1, 1, "", "custom_accuracy_function"], [16, 1, 1, "", "grid_search"]], "src.decorators": [[17, 1, 1, "", "log_function_name"]], "src.icd_mimic": [[19, 0, 0, "-", "constants"], [20, 0, 0, "-", "prepare_mimic"]], "src.icd_mimic.prepare_mimic": [[20, 1, 1, "", "clean_icd9"], [20, 1, 1, "", "clean_mimic_diagnoses"], [20, 1, 1, "", "clean_mimic_noteevents"], [20, 1, 1, "", "main"], [20, 1, 1, "", "merge_diagnoses_icd9"], [20, 1, 1, "", "merge_diagnoses_noteevents"], [20, 1, 1, "", "save_df"]], "src.nlp": [[22, 0, 0, "-", "constants"], [23, 0, 0, "-", "create_data_mimic"], [24, 0, 0, "-", "create_data_mtsamples"], [25, 0, 0, "-", "mlm_keybert_mtsamples"], [26, 0, 0, "-", "mlm_training_mimic"], [27, 0, 0, "-", "mlm_training_mtsamples"], [28, 0, 0, "-", "predict"], [29, 0, 0, "-", "sc_keybert_mimic"], [30, 0, 0, "-", "sc_keybert_mtsamples"], [31, 0, 0, "-", "sc_training_mimic"], [32, 0, 0, "-", "sc_training_mtsamples"], [33, 0, 0, "-", "utils"]], "src.nlp.create_data_mimic": [[23, 1, 1, "", "clean_text"], [23, 1, 1, "", "keep_only_text_from_choosen_headers"], [23, 1, 1, "", "main"]], "src.nlp.create_data_mtsamples": [[24, 1, 1, "", "cleaning_input"], [24, 1, 1, "", "create_df"], [24, 1, 1, "", "create_dir"], [24, 1, 1, "", "main"], [24, 1, 1, "", "save_df"], [24, 1, 1, "", "top_classes"]], "src.nlp.mlm_keybert_mtsamples": [[25, 1, 1, "", "calculate_optimal_candidate_nr"], [25, 1, 1, "", "keyword_extraction"], [25, 1, 1, "", "keywords_from_model"], [25, 1, 1, "", "main"], [25, 1, 1, "", "save_dataframe"], [25, 1, 1, "", "small_column_df"]], "src.nlp.mlm_training_mimic": [[26, 1, 1, "", "compute_metrics"], [26, 1, 1, "", "load_datasets"], [26, 1, 1, "", "load_trainer"], [26, 1, 1, "", "main"], [26, 1, 1, "", "tokenize_dataset"], [26, 1, 1, "", "tokenize_function"]], "src.nlp.mlm_training_mtsamples": [[27, 1, 1, "", "compute_metrics"], [27, 1, 1, "", "load_datasets"], [27, 1, 1, "", "load_model"], [27, 1, 1, "", "load_trainer"], [27, 1, 1, "", "main"], [27, 1, 1, "", "remove_most_common"], [27, 1, 1, "", "tokenize_dataset"]], "src.nlp.predict": [[28, 1, 1, "", "main"], [28, 1, 1, "", "max_length"]], "src.nlp.sc_keybert_mimic": [[29, 1, 1, "", "calculate_optimal_candidate_nr"], [29, 1, 1, "", "keyword_extraction"], [29, 1, 1, "", "keywords_from_model"], [29, 1, 1, "", "main"], [29, 1, 1, "", "save_dataframe"], [29, 1, 1, "", "small_column_df"]], "src.nlp.sc_keybert_mtsamples": [[30, 1, 1, "", "calculate_optimal_candidate_nr"], [30, 1, 1, "", "keyword_extraction"], [30, 1, 1, "", "keywords_from_model"], [30, 1, 1, "", "main"], [30, 1, 1, "", "save_dataframe"], [30, 1, 1, "", "small_column_df"]], "src.nlp.sc_training_mimic": [[31, 1, 1, "", "clean_remove_column"], [31, 1, 1, "", "compute_metrics"], [31, 1, 1, "", "load_datasets"], [31, 1, 1, "", "load_model"], [31, 1, 1, "", "load_trainer"], [31, 1, 1, "", "main"], [31, 1, 1, "", "map_medical_specialty_to_labels"], [31, 1, 1, "", "tokenize_dataset"], [31, 1, 1, "", "tokenize_function"]], "src.nlp.sc_training_mtsamples": [[32, 1, 1, "", "clean_remove_column"], [32, 1, 1, "", "compute_metrics"], [32, 1, 1, "", "load_datasets"], [32, 1, 1, "", "load_model"], [32, 1, 1, "", "load_trainer"], [32, 1, 1, "", "main"], [32, 1, 1, "", "map_medical_specialty_to_labels"], [32, 1, 1, "", "tokenize_dataset"]], "src.nlp.utils": [[33, 1, 1, "", "cleaning_input"], [33, 1, 1, "", "get_device"], [33, 1, 1, "", "load_tokenizer"], [33, 1, 1, "", "load_training_args"], [33, 1, 1, "", "tokenize_function"]], "src.streamlit": [[36, 0, 0, "-", "app_clf"], [37, 0, 0, "-", "app_nlp"], [38, 0, 0, "-", "app_stt"]], "src.streamlit.app_clf": [[36, 1, 1, "", "clf_main"], [36, 1, 1, "", "get_words"], [36, 1, 1, "", "lime_explainer"], [36, 1, 1, "", "predict_probability"], [36, 1, 1, "", "top_symptoms"]], "src.streamlit.app_nlp": [[37, 1, 1, "", "keyword_extraction"], [37, 1, 1, "", "load_keybert"], [37, 1, 1, "", "nlp_main"]], "src.streamlit.app_stt": [[38, 1, 1, "", "load_pipeline"], [38, 1, 1, "", "stt_main"]], "src.stt": [[40, 0, 0, "-", "analyze_data"], [41, 0, 0, "-", "constants"], [42, 0, 0, "-", "create_data"], [43, 0, 0, "-", "evaluate_model"], [44, 0, 0, "-", "hubert_training"], [45, 0, 0, "-", "predict"], [46, 0, 0, "-", "transform_speech_data"], [47, 0, 0, "-", "utils"], [48, 0, 0, "-", "wav2vec2_training"]], "src.stt.analyze_data": [[40, 1, 1, "", "create_charts"], [40, 1, 1, "", "create_dir"], [40, 1, 1, "", "evaluate_audio_sample"], [40, 1, 1, "", "get_librosa_features"], [40, 1, 1, "", "load_dataframe"], [40, 1, 1, "", "load_train_val_test_data"], [40, 1, 1, "", "main"], [40, 1, 1, "", "make_report"], [40, 1, 1, "", "save_report"], [40, 1, 1, "", "transform_dataframe"]], "src.stt.create_data": [[42, 1, 1, "", "clean_df"], [42, 1, 1, "", "copy_files"], [42, 1, 1, "", "create_own_dataset"], [42, 1, 1, "", "get_wav_file_duration"]], "src.stt.evaluate_model": [[43, 1, 1, "", "get_test_results"], [43, 1, 1, "", "load_test_data"], [43, 1, 1, "", "map_to_result"], [43, 1, 1, "", "show_random_elements"], [43, 1, 1, "", "showcase_test"]], "src.stt.hubert_training": [[44, 1, 1, "", "load_model"]], "src.stt.predict": [[45, 1, 1, "", "transcribe_audio"]], "src.stt.transform_speech_data": [[46, 1, 1, "", "create_labels_and_input_values"], [46, 1, 1, "", "create_vocab"], [46, 1, 1, "", "preprocess_data"], [46, 1, 1, "", "recreate_folder"], [46, 1, 1, "", "remove_special_characters"], [46, 1, 1, "", "save_datasets"], [46, 1, 1, "", "transform_dataset"]], "src.stt.utils": [[47, 2, 1, "", "DataCollatorCTCWithPadding"], [47, 2, 1, "", "EearlyStoppingCallbackAfterNumEpochs"], [47, 1, 1, "", "compute_metrics"], [47, 1, 1, "", "get_device"], [47, 1, 1, "", "load_datasets"], [47, 1, 1, "", "load_processor"], [47, 1, 1, "", "load_trained_model_and_processor_hubert"], [47, 1, 1, "", "load_trained_model_and_processor_wav2vec2"], [47, 1, 1, "", "load_trainer"], [47, 1, 1, "", "load_training_args"]], "src.stt.utils.EearlyStoppingCallbackAfterNumEpochs": [[47, 3, 1, "", "on_evaluate"]], "src.stt.wav2vec2_training": [[48, 1, 1, "", "load_model"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"welcom": 0, "masterthesi": 0, "": 0, "document": 0, "content": [0, 2, 3, 18, 21, 34, 39], "indic": 0, "tabl": 0, "src": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "packag": [2, 3, 18, 21, 34, 39], "subpackag": 2, "submodul": [2, 3, 18, 21, 34, 39], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "clf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "constant": [4, 19, 22, 41], "create_data": [5, 42], "dt_train": 6, "evaluation_classifi": 7, "evaluation_mask": 8, "evaluation_mim": 9, "lr_train": 10, "old_train_lr_al": 11, "predict": [12, 28, 45], "rf_train": 13, "svm_train": 14, "util": [15, 33, 47], "xgboost_train": 16, "decor": 17, "icd_mim": [18, 19, 20], "prepare_mim": 20, "nlp": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "create_data_mim": 23, "create_data_mtsampl": 24, "mlm_keybert_mtsampl": 25, "mlm_training_mim": 26, "mlm_training_mtsampl": 27, "sc_keybert_mim": 29, "sc_keybert_mtsampl": 30, "sc_training_mim": 31, "sc_training_mtsampl": 32, "streamlit": [34, 35, 36, 37, 38], "app": 35, "app_clf": 36, "app_nlp": 37, "app_stt": 38, "stt": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "analyze_data": 40, "evaluate_model": 43, "hubert_train": 44, "transform_speech_data": 46, "wav2vec2_train": 48}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to Masterthesis\u2019s documentation!": [[0, "welcome-to-masterthesis-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "src": [[1, "src"]], "src package": [[2, "src-package"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [18, "submodules"], [21, "submodules"], [34, "submodules"], [39, "submodules"]], "Module contents": [[2, "module-src"], [3, "module-src.clf"], [18, "module-src.icd_mimic"], [21, "module-src.nlp"], [34, "module-src.streamlit"], [39, "module-src.stt"]], "src.clf package": [[3, "src-clf-package"]], "src.clf.constants module": [[4, "module-src.clf.constants"]], "src.clf.create_data module": [[5, "module-src.clf.create_data"]], "src.clf.dt_training module": [[6, "module-src.clf.dt_training"]], "src.clf.evaluation_classified module": [[7, "module-src.clf.evaluation_classified"]], "src.clf.evaluation_masked module": [[8, "module-src.clf.evaluation_masked"]], "src.clf.evaluation_mimic module": [[9, "module-src.clf.evaluation_mimic"]], "src.clf.lr_training module": [[10, "module-src.clf.lr_training"]], "src.clf.old_train_lr_all module": [[11, "module-src.clf.old_train_lr_all"]], "src.clf.predict module": [[12, "module-src.clf.predict"]], "src.clf.rf_training module": [[13, "module-src.clf.rf_training"]], "src.clf.svm_training module": [[14, "module-src.clf.svm_training"]], "src.clf.utils module": [[15, "module-src.clf.utils"]], "src.clf.xgboost_training module": [[16, "module-src.clf.xgboost_training"]], "src.decorators module": [[17, "module-src.decorators"]], "src.icd_mimic package": [[18, "src-icd-mimic-package"]], "src.icd_mimic.constants module": [[19, "module-src.icd_mimic.constants"]], "src.icd_mimic.prepare_mimic module": [[20, "module-src.icd_mimic.prepare_mimic"]], "src.nlp package": [[21, "src-nlp-package"]], "src.nlp.constants module": [[22, "module-src.nlp.constants"]], "src.nlp.create_data_mimic module": [[23, "module-src.nlp.create_data_mimic"]], "src.nlp.create_data_mtsamples module": [[24, "module-src.nlp.create_data_mtsamples"]], "src.nlp.mlm_keybert_mtsamples module": [[25, "module-src.nlp.mlm_keybert_mtsamples"]], "src.nlp.mlm_training_mimic module": [[26, "module-src.nlp.mlm_training_mimic"]], "src.nlp.mlm_training_mtsamples module": [[27, "module-src.nlp.mlm_training_mtsamples"]], "src.nlp.predict module": [[28, "module-src.nlp.predict"]], "src.nlp.sc_keybert_mimic module": [[29, "module-src.nlp.sc_keybert_mimic"]], "src.nlp.sc_keybert_mtsamples module": [[30, "module-src.nlp.sc_keybert_mtsamples"]], "src.nlp.sc_training_mimic module": [[31, "module-src.nlp.sc_training_mimic"]], "src.nlp.sc_training_mtsamples module": [[32, "module-src.nlp.sc_training_mtsamples"]], "src.nlp.utils module": [[33, "module-src.nlp.utils"]], "src.streamlit package": [[34, "src-streamlit-package"]], "src.streamlit.app module": [[35, "src-streamlit-app-module"]], "src.streamlit.app_clf module": [[36, "module-src.streamlit.app_clf"]], "src.streamlit.app_nlp module": [[37, "module-src.streamlit.app_nlp"]], "src.streamlit.app_stt module": [[38, "module-src.streamlit.app_stt"]], "src.stt package": [[39, "src-stt-package"]], "src.stt.analyze_data module": [[40, "module-src.stt.analyze_data"]], "src.stt.constants module": [[41, "module-src.stt.constants"]], "src.stt.create_data module": [[42, "module-src.stt.create_data"]], "src.stt.evaluate_model module": [[43, "module-src.stt.evaluate_model"]], "src.stt.hubert_training module": [[44, "module-src.stt.hubert_training"]], "src.stt.predict module": [[45, "module-src.stt.predict"]], "src.stt.transform_speech_data module": [[46, "module-src.stt.transform_speech_data"]], "src.stt.utils module": [[47, "module-src.stt.utils"]], "src.stt.wav2vec2_training module": [[48, "module-src.stt.wav2vec2_training"]]}, "indexentries": {"module": [[2, "module-src"], [3, "module-src.clf"], [4, "module-src.clf.constants"], [5, "module-src.clf.create_data"], [6, "module-src.clf.dt_training"], [7, "module-src.clf.evaluation_classified"], [8, "module-src.clf.evaluation_masked"], [9, "module-src.clf.evaluation_mimic"], [10, "module-src.clf.lr_training"], [11, "module-src.clf.old_train_lr_all"], [12, "module-src.clf.predict"], [13, "module-src.clf.rf_training"], [14, "module-src.clf.svm_training"], [15, "module-src.clf.utils"], [16, "module-src.clf.xgboost_training"], [17, "module-src.decorators"], [18, "module-src.icd_mimic"], [19, "module-src.icd_mimic.constants"], [20, "module-src.icd_mimic.prepare_mimic"], [21, "module-src.nlp"], [22, "module-src.nlp.constants"], [23, "module-src.nlp.create_data_mimic"], [24, "module-src.nlp.create_data_mtsamples"], [25, "module-src.nlp.mlm_keybert_mtsamples"], [26, "module-src.nlp.mlm_training_mimic"], [27, "module-src.nlp.mlm_training_mtsamples"], [28, "module-src.nlp.predict"], [29, "module-src.nlp.sc_keybert_mimic"], [30, "module-src.nlp.sc_keybert_mtsamples"], [31, "module-src.nlp.sc_training_mimic"], [32, "module-src.nlp.sc_training_mtsamples"], [33, "module-src.nlp.utils"], [34, "module-src.streamlit"], [36, "module-src.streamlit.app_clf"], [37, "module-src.streamlit.app_nlp"], [38, "module-src.streamlit.app_stt"], [39, "module-src.stt"], [40, "module-src.stt.analyze_data"], [41, "module-src.stt.constants"], [42, "module-src.stt.create_data"], [43, "module-src.stt.evaluate_model"], [44, "module-src.stt.hubert_training"], [45, "module-src.stt.predict"], [46, "module-src.stt.transform_speech_data"], [47, "module-src.stt.utils"], [48, "module-src.stt.wav2vec2_training"]], "src": [[2, "module-src"]], "src.clf": [[3, "module-src.clf"]], "src.clf.constants": [[4, "module-src.clf.constants"]], "main() (in module src.clf.create_data)": [[5, "src.clf.create_data.main"]], "replace_tab() (in module src.clf.create_data)": [[5, "src.clf.create_data.replace_tab"]], "src.clf.create_data": [[5, "module-src.clf.create_data"]], "transform_column() (in module src.clf.create_data)": [[5, "src.clf.create_data.transform_column"]], "build_pipeline() (in module src.clf.dt_training)": [[6, "src.clf.dt_training.build_pipeline"]], "custom_accuracy_function() (in module src.clf.dt_training)": [[6, "src.clf.dt_training.custom_accuracy_function"]], "grid_search() (in module src.clf.dt_training)": [[6, "src.clf.dt_training.grid_search"]], "src.clf.dt_training": [[6, "module-src.clf.dt_training"]], "collect_preds() (in module src.clf.evaluation_classified)": [[7, "src.clf.evaluation_classified.collect_preds"]], "compute_accuracy() (in module src.clf.evaluation_classified)": [[7, "src.clf.evaluation_classified.compute_accuracy"]], "compute_mrr_at_k() (in module src.clf.evaluation_classified)": [[7, "src.clf.evaluation_classified.compute_mrr_at_k"]], "get_top_k_predictions() (in module src.clf.evaluation_classified)": [[7, "src.clf.evaluation_classified.get_top_k_predictions"]], "main() (in module src.clf.evaluation_classified)": [[7, "src.clf.evaluation_classified.main"]], "reciprocal_rank() (in module src.clf.evaluation_classified)": [[7, "src.clf.evaluation_classified.reciprocal_rank"]], "src.clf.evaluation_classified": [[7, "module-src.clf.evaluation_classified"]], "collect_preds() (in module src.clf.evaluation_masked)": [[8, "src.clf.evaluation_masked.collect_preds"]], "compute_accuracy() (in module src.clf.evaluation_masked)": [[8, "src.clf.evaluation_masked.compute_accuracy"]], "compute_mrr_at_k() (in module src.clf.evaluation_masked)": [[8, "src.clf.evaluation_masked.compute_mrr_at_k"]], "get_top_k_predictions() (in module src.clf.evaluation_masked)": [[8, "src.clf.evaluation_masked.get_top_k_predictions"]], "main() (in module src.clf.evaluation_masked)": [[8, "src.clf.evaluation_masked.main"]], "reciprocal_rank() (in module src.clf.evaluation_masked)": [[8, "src.clf.evaluation_masked.reciprocal_rank"]], "src.clf.evaluation_masked": [[8, "module-src.clf.evaluation_masked"]], "collect_preds() (in module src.clf.evaluation_mimic)": [[9, "src.clf.evaluation_mimic.collect_preds"]], "compute_accuracy() (in module src.clf.evaluation_mimic)": [[9, "src.clf.evaluation_mimic.compute_accuracy"]], "compute_mrr_at_k() (in module src.clf.evaluation_mimic)": [[9, "src.clf.evaluation_mimic.compute_mrr_at_k"]], "get_top_k_predictions() (in module src.clf.evaluation_mimic)": [[9, "src.clf.evaluation_mimic.get_top_k_predictions"]], "main() (in module src.clf.evaluation_mimic)": [[9, "src.clf.evaluation_mimic.main"]], "reciprocal_rank() (in module src.clf.evaluation_mimic)": [[9, "src.clf.evaluation_mimic.reciprocal_rank"]], "src.clf.evaluation_mimic": [[9, "module-src.clf.evaluation_mimic"]], "build_pipeline() (in module src.clf.lr_training)": [[10, "src.clf.lr_training.build_pipeline"]], "custom_accuracy_function() (in module src.clf.lr_training)": [[10, "src.clf.lr_training.custom_accuracy_function"]], "grid_search() (in module src.clf.lr_training)": [[10, "src.clf.lr_training.grid_search"]], "src.clf.lr_training": [[10, "module-src.clf.lr_training"]], "build_pipeline() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.build_pipeline"]], "collect_preds() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.collect_preds"]], "compute_accuracy() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.compute_accuracy"]], "compute_mrr_at_k() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.compute_mrr_at_k"]], "custom_accuracy_function() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.custom_accuracy_function"]], "fit_model() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.fit_model"]], "get_model_metrics() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.get_model_metrics"]], "get_top_k_predictions() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.get_top_k_predictions"]], "grid_search() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.grid_search"]], "load_data() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.load_data"]], "main() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.main"]], "replace_tab() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.replace_tab"]], "src.clf.old_train_lr_all": [[11, "module-src.clf.old_train_lr_all"]], "transform_column() (in module src.clf.old_train_lr_all)": [[11, "src.clf.old_train_lr_all.transform_column"]], "feat_imp() (in module src.clf.predict)": [[12, "src.clf.predict.feat_imp"]], "lime_explainer() (in module src.clf.predict)": [[12, "src.clf.predict.lime_explainer"]], "main() (in module src.clf.predict)": [[12, "src.clf.predict.main"]], "predict_probability() (in module src.clf.predict)": [[12, "src.clf.predict.predict_probability"]], "src.clf.predict": [[12, "module-src.clf.predict"]], "top_symptoms() (in module src.clf.predict)": [[12, "src.clf.predict.top_symptoms"]], "build_pipeline() (in module src.clf.rf_training)": [[13, "src.clf.rf_training.build_pipeline"]], "custom_accuracy_function() (in module src.clf.rf_training)": [[13, "src.clf.rf_training.custom_accuracy_function"]], "grid_search() (in module src.clf.rf_training)": [[13, "src.clf.rf_training.grid_search"]], "src.clf.rf_training": [[13, "module-src.clf.rf_training"]], "build_pipeline() (in module src.clf.svm_training)": [[14, "src.clf.svm_training.build_pipeline"]], "custom_accuracy_function() (in module src.clf.svm_training)": [[14, "src.clf.svm_training.custom_accuracy_function"]], "grid_search() (in module src.clf.svm_training)": [[14, "src.clf.svm_training.grid_search"]], "src.clf.svm_training": [[14, "module-src.clf.svm_training"]], "load_data() (in module src.clf.utils)": [[15, "src.clf.utils.load_data"]], "preprocessing_pipeline() (in module src.clf.utils)": [[15, "src.clf.utils.preprocessing_pipeline"]], "src.clf.utils": [[15, "module-src.clf.utils"]], "build_pipeline() (in module src.clf.xgboost_training)": [[16, "src.clf.xgboost_training.build_pipeline"]], "custom_accuracy_function() (in module src.clf.xgboost_training)": [[16, "src.clf.xgboost_training.custom_accuracy_function"]], "grid_search() (in module src.clf.xgboost_training)": [[16, "src.clf.xgboost_training.grid_search"]], "src.clf.xgboost_training": [[16, "module-src.clf.xgboost_training"]], "log_function_name() (in module src.decorators)": [[17, "src.decorators.log_function_name"]], "src.decorators": [[17, "module-src.decorators"]], "src.icd_mimic": [[18, "module-src.icd_mimic"]], "src.icd_mimic.constants": [[19, "module-src.icd_mimic.constants"]], "clean_icd9() (in module src.icd_mimic.prepare_mimic)": [[20, "src.icd_mimic.prepare_mimic.clean_icd9"]], "clean_mimic_diagnoses() (in module src.icd_mimic.prepare_mimic)": [[20, "src.icd_mimic.prepare_mimic.clean_mimic_diagnoses"]], "clean_mimic_noteevents() (in module src.icd_mimic.prepare_mimic)": [[20, "src.icd_mimic.prepare_mimic.clean_mimic_noteevents"]], "main() (in module src.icd_mimic.prepare_mimic)": [[20, "src.icd_mimic.prepare_mimic.main"]], "merge_diagnoses_icd9() (in module src.icd_mimic.prepare_mimic)": [[20, "src.icd_mimic.prepare_mimic.merge_diagnoses_icd9"]], "merge_diagnoses_noteevents() (in module src.icd_mimic.prepare_mimic)": [[20, "src.icd_mimic.prepare_mimic.merge_diagnoses_noteevents"]], "save_df() (in module src.icd_mimic.prepare_mimic)": [[20, "src.icd_mimic.prepare_mimic.save_df"]], "src.icd_mimic.prepare_mimic": [[20, "module-src.icd_mimic.prepare_mimic"]], "src.nlp": [[21, "module-src.nlp"]], "src.nlp.constants": [[22, "module-src.nlp.constants"]], "clean_text() (in module src.nlp.create_data_mimic)": [[23, "src.nlp.create_data_mimic.clean_text"]], "keep_only_text_from_choosen_headers() (in module src.nlp.create_data_mimic)": [[23, "src.nlp.create_data_mimic.keep_only_text_from_choosen_headers"]], "main() (in module src.nlp.create_data_mimic)": [[23, "src.nlp.create_data_mimic.main"]], "src.nlp.create_data_mimic": [[23, "module-src.nlp.create_data_mimic"]], "cleaning_input() (in module src.nlp.create_data_mtsamples)": [[24, "src.nlp.create_data_mtsamples.cleaning_input"]], "create_df() (in module src.nlp.create_data_mtsamples)": [[24, "src.nlp.create_data_mtsamples.create_df"]], "create_dir() (in module src.nlp.create_data_mtsamples)": [[24, "src.nlp.create_data_mtsamples.create_dir"]], "main() (in module src.nlp.create_data_mtsamples)": [[24, "src.nlp.create_data_mtsamples.main"]], "save_df() (in module src.nlp.create_data_mtsamples)": [[24, "src.nlp.create_data_mtsamples.save_df"]], "src.nlp.create_data_mtsamples": [[24, "module-src.nlp.create_data_mtsamples"]], "top_classes() (in module src.nlp.create_data_mtsamples)": [[24, "src.nlp.create_data_mtsamples.top_classes"]], "calculate_optimal_candidate_nr() (in module src.nlp.mlm_keybert_mtsamples)": [[25, "src.nlp.mlm_keybert_mtsamples.calculate_optimal_candidate_nr"]], "keyword_extraction() (in module src.nlp.mlm_keybert_mtsamples)": [[25, "src.nlp.mlm_keybert_mtsamples.keyword_extraction"]], "keywords_from_model() (in module src.nlp.mlm_keybert_mtsamples)": [[25, "src.nlp.mlm_keybert_mtsamples.keywords_from_model"]], "main() (in module src.nlp.mlm_keybert_mtsamples)": [[25, "src.nlp.mlm_keybert_mtsamples.main"]], "save_dataframe() (in module src.nlp.mlm_keybert_mtsamples)": [[25, "src.nlp.mlm_keybert_mtsamples.save_dataframe"]], "small_column_df() (in module src.nlp.mlm_keybert_mtsamples)": [[25, "src.nlp.mlm_keybert_mtsamples.small_column_df"]], "src.nlp.mlm_keybert_mtsamples": [[25, "module-src.nlp.mlm_keybert_mtsamples"]], "compute_metrics() (in module src.nlp.mlm_training_mimic)": [[26, "src.nlp.mlm_training_mimic.compute_metrics"]], "load_datasets() (in module src.nlp.mlm_training_mimic)": [[26, "src.nlp.mlm_training_mimic.load_datasets"]], "load_trainer() (in module src.nlp.mlm_training_mimic)": [[26, "src.nlp.mlm_training_mimic.load_trainer"]], "main() (in module src.nlp.mlm_training_mimic)": [[26, "src.nlp.mlm_training_mimic.main"]], "src.nlp.mlm_training_mimic": [[26, "module-src.nlp.mlm_training_mimic"]], "tokenize_dataset() (in module src.nlp.mlm_training_mimic)": [[26, "src.nlp.mlm_training_mimic.tokenize_dataset"]], "tokenize_function() (in module src.nlp.mlm_training_mimic)": [[26, "src.nlp.mlm_training_mimic.tokenize_function"]], "compute_metrics() (in module src.nlp.mlm_training_mtsamples)": [[27, "src.nlp.mlm_training_mtsamples.compute_metrics"]], "load_datasets() (in module src.nlp.mlm_training_mtsamples)": [[27, "src.nlp.mlm_training_mtsamples.load_datasets"]], "load_model() (in module src.nlp.mlm_training_mtsamples)": [[27, "src.nlp.mlm_training_mtsamples.load_model"]], "load_trainer() (in module src.nlp.mlm_training_mtsamples)": [[27, "src.nlp.mlm_training_mtsamples.load_trainer"]], "main() (in module src.nlp.mlm_training_mtsamples)": [[27, "src.nlp.mlm_training_mtsamples.main"]], "remove_most_common() (in module src.nlp.mlm_training_mtsamples)": [[27, "src.nlp.mlm_training_mtsamples.remove_most_common"]], "src.nlp.mlm_training_mtsamples": [[27, "module-src.nlp.mlm_training_mtsamples"]], "tokenize_dataset() (in module src.nlp.mlm_training_mtsamples)": [[27, "src.nlp.mlm_training_mtsamples.tokenize_dataset"]], "main() (in module src.nlp.predict)": [[28, "src.nlp.predict.main"]], "max_length() (in module src.nlp.predict)": [[28, "src.nlp.predict.max_length"]], "src.nlp.predict": [[28, "module-src.nlp.predict"]], "calculate_optimal_candidate_nr() (in module src.nlp.sc_keybert_mimic)": [[29, "src.nlp.sc_keybert_mimic.calculate_optimal_candidate_nr"]], "keyword_extraction() (in module src.nlp.sc_keybert_mimic)": [[29, "src.nlp.sc_keybert_mimic.keyword_extraction"]], "keywords_from_model() (in module src.nlp.sc_keybert_mimic)": [[29, "src.nlp.sc_keybert_mimic.keywords_from_model"]], "main() (in module src.nlp.sc_keybert_mimic)": [[29, "src.nlp.sc_keybert_mimic.main"]], "save_dataframe() (in module src.nlp.sc_keybert_mimic)": [[29, "src.nlp.sc_keybert_mimic.save_dataframe"]], "small_column_df() (in module src.nlp.sc_keybert_mimic)": [[29, "src.nlp.sc_keybert_mimic.small_column_df"]], "src.nlp.sc_keybert_mimic": [[29, "module-src.nlp.sc_keybert_mimic"]], "calculate_optimal_candidate_nr() (in module src.nlp.sc_keybert_mtsamples)": [[30, "src.nlp.sc_keybert_mtsamples.calculate_optimal_candidate_nr"]], "keyword_extraction() (in module src.nlp.sc_keybert_mtsamples)": [[30, "src.nlp.sc_keybert_mtsamples.keyword_extraction"]], "keywords_from_model() (in module src.nlp.sc_keybert_mtsamples)": [[30, "src.nlp.sc_keybert_mtsamples.keywords_from_model"]], "main() (in module src.nlp.sc_keybert_mtsamples)": [[30, "src.nlp.sc_keybert_mtsamples.main"]], "save_dataframe() (in module src.nlp.sc_keybert_mtsamples)": [[30, "src.nlp.sc_keybert_mtsamples.save_dataframe"]], "small_column_df() (in module src.nlp.sc_keybert_mtsamples)": [[30, "src.nlp.sc_keybert_mtsamples.small_column_df"]], "src.nlp.sc_keybert_mtsamples": [[30, "module-src.nlp.sc_keybert_mtsamples"]], "clean_remove_column() (in module src.nlp.sc_training_mimic)": [[31, "src.nlp.sc_training_mimic.clean_remove_column"]], "compute_metrics() (in module src.nlp.sc_training_mimic)": [[31, "src.nlp.sc_training_mimic.compute_metrics"]], "load_datasets() (in module src.nlp.sc_training_mimic)": [[31, "src.nlp.sc_training_mimic.load_datasets"]], "load_model() (in module src.nlp.sc_training_mimic)": [[31, "src.nlp.sc_training_mimic.load_model"]], "load_trainer() (in module src.nlp.sc_training_mimic)": [[31, "src.nlp.sc_training_mimic.load_trainer"]], "main() (in module src.nlp.sc_training_mimic)": [[31, "src.nlp.sc_training_mimic.main"]], "map_medical_specialty_to_labels() (in module src.nlp.sc_training_mimic)": [[31, "src.nlp.sc_training_mimic.map_medical_specialty_to_labels"]], "src.nlp.sc_training_mimic": [[31, "module-src.nlp.sc_training_mimic"]], "tokenize_dataset() (in module src.nlp.sc_training_mimic)": [[31, "src.nlp.sc_training_mimic.tokenize_dataset"]], "tokenize_function() (in module src.nlp.sc_training_mimic)": [[31, "src.nlp.sc_training_mimic.tokenize_function"]], "clean_remove_column() (in module src.nlp.sc_training_mtsamples)": [[32, "src.nlp.sc_training_mtsamples.clean_remove_column"]], "compute_metrics() (in module src.nlp.sc_training_mtsamples)": [[32, "src.nlp.sc_training_mtsamples.compute_metrics"]], "load_datasets() (in module src.nlp.sc_training_mtsamples)": [[32, "src.nlp.sc_training_mtsamples.load_datasets"]], "load_model() (in module src.nlp.sc_training_mtsamples)": [[32, "src.nlp.sc_training_mtsamples.load_model"]], "load_trainer() (in module src.nlp.sc_training_mtsamples)": [[32, "src.nlp.sc_training_mtsamples.load_trainer"]], "main() (in module src.nlp.sc_training_mtsamples)": [[32, "src.nlp.sc_training_mtsamples.main"]], "map_medical_specialty_to_labels() (in module src.nlp.sc_training_mtsamples)": [[32, "src.nlp.sc_training_mtsamples.map_medical_specialty_to_labels"]], "src.nlp.sc_training_mtsamples": [[32, "module-src.nlp.sc_training_mtsamples"]], "tokenize_dataset() (in module src.nlp.sc_training_mtsamples)": [[32, "src.nlp.sc_training_mtsamples.tokenize_dataset"]], "cleaning_input() (in module src.nlp.utils)": [[33, "src.nlp.utils.cleaning_input"]], "get_device() (in module src.nlp.utils)": [[33, "src.nlp.utils.get_device"]], "load_tokenizer() (in module src.nlp.utils)": [[33, "src.nlp.utils.load_tokenizer"]], "load_training_args() (in module src.nlp.utils)": [[33, "src.nlp.utils.load_training_args"]], "src.nlp.utils": [[33, "module-src.nlp.utils"]], "tokenize_function() (in module src.nlp.utils)": [[33, "src.nlp.utils.tokenize_function"]], "src.streamlit": [[34, "module-src.streamlit"]], "clf_main() (in module src.streamlit.app_clf)": [[36, "src.streamlit.app_clf.clf_main"]], "get_words() (in module src.streamlit.app_clf)": [[36, "src.streamlit.app_clf.get_words"]], "lime_explainer() (in module src.streamlit.app_clf)": [[36, "src.streamlit.app_clf.lime_explainer"]], "predict_probability() (in module src.streamlit.app_clf)": [[36, "src.streamlit.app_clf.predict_probability"]], "src.streamlit.app_clf": [[36, "module-src.streamlit.app_clf"]], "top_symptoms() (in module src.streamlit.app_clf)": [[36, "src.streamlit.app_clf.top_symptoms"]], "keyword_extraction() (in module src.streamlit.app_nlp)": [[37, "src.streamlit.app_nlp.keyword_extraction"]], "load_keybert() (in module src.streamlit.app_nlp)": [[37, "src.streamlit.app_nlp.load_keybert"]], "nlp_main() (in module src.streamlit.app_nlp)": [[37, "src.streamlit.app_nlp.nlp_main"]], "src.streamlit.app_nlp": [[37, "module-src.streamlit.app_nlp"]], "load_pipeline() (in module src.streamlit.app_stt)": [[38, "src.streamlit.app_stt.load_pipeline"]], "src.streamlit.app_stt": [[38, "module-src.streamlit.app_stt"]], "stt_main() (in module src.streamlit.app_stt)": [[38, "src.streamlit.app_stt.stt_main"]], "src.stt": [[39, "module-src.stt"]], "create_charts() (in module src.stt.analyze_data)": [[40, "src.stt.analyze_data.create_charts"]], "create_dir() (in module src.stt.analyze_data)": [[40, "src.stt.analyze_data.create_dir"]], "evaluate_audio_sample() (in module src.stt.analyze_data)": [[40, "src.stt.analyze_data.evaluate_audio_sample"]], "get_librosa_features() (in module src.stt.analyze_data)": [[40, "src.stt.analyze_data.get_librosa_features"]], "load_dataframe() (in module src.stt.analyze_data)": [[40, "src.stt.analyze_data.load_dataframe"]], "load_train_val_test_data() (in module src.stt.analyze_data)": [[40, "src.stt.analyze_data.load_train_val_test_data"]], "main() (in module src.stt.analyze_data)": [[40, "src.stt.analyze_data.main"]], "make_report() (in module src.stt.analyze_data)": [[40, "src.stt.analyze_data.make_report"]], "save_report() (in module src.stt.analyze_data)": [[40, "src.stt.analyze_data.save_report"]], "src.stt.analyze_data": [[40, "module-src.stt.analyze_data"]], "transform_dataframe() (in module src.stt.analyze_data)": [[40, "src.stt.analyze_data.transform_dataframe"]], "src.stt.constants": [[41, "module-src.stt.constants"]], "clean_df() (in module src.stt.create_data)": [[42, "src.stt.create_data.clean_df"]], "copy_files() (in module src.stt.create_data)": [[42, "src.stt.create_data.copy_files"]], "create_own_dataset() (in module src.stt.create_data)": [[42, "src.stt.create_data.create_own_dataset"]], "get_wav_file_duration() (in module src.stt.create_data)": [[42, "src.stt.create_data.get_wav_file_duration"]], "src.stt.create_data": [[42, "module-src.stt.create_data"]], "get_test_results() (in module src.stt.evaluate_model)": [[43, "src.stt.evaluate_model.get_test_results"]], "load_test_data() (in module src.stt.evaluate_model)": [[43, "src.stt.evaluate_model.load_test_data"]], "map_to_result() (in module src.stt.evaluate_model)": [[43, "src.stt.evaluate_model.map_to_result"]], "show_random_elements() (in module src.stt.evaluate_model)": [[43, "src.stt.evaluate_model.show_random_elements"]], "showcase_test() (in module src.stt.evaluate_model)": [[43, "src.stt.evaluate_model.showcase_test"]], "src.stt.evaluate_model": [[43, "module-src.stt.evaluate_model"]], "load_model() (in module src.stt.hubert_training)": [[44, "src.stt.hubert_training.load_model"]], "src.stt.hubert_training": [[44, "module-src.stt.hubert_training"]], "src.stt.predict": [[45, "module-src.stt.predict"]], "transcribe_audio() (in module src.stt.predict)": [[45, "src.stt.predict.transcribe_audio"]], "create_labels_and_input_values() (in module src.stt.transform_speech_data)": [[46, "src.stt.transform_speech_data.create_labels_and_input_values"]], "create_vocab() (in module src.stt.transform_speech_data)": [[46, "src.stt.transform_speech_data.create_vocab"]], "preprocess_data() (in module src.stt.transform_speech_data)": [[46, "src.stt.transform_speech_data.preprocess_data"]], "recreate_folder() (in module src.stt.transform_speech_data)": [[46, "src.stt.transform_speech_data.recreate_folder"]], "remove_special_characters() (in module src.stt.transform_speech_data)": [[46, "src.stt.transform_speech_data.remove_special_characters"]], "save_datasets() (in module src.stt.transform_speech_data)": [[46, "src.stt.transform_speech_data.save_datasets"]], "src.stt.transform_speech_data": [[46, "module-src.stt.transform_speech_data"]], "transform_dataset() (in module src.stt.transform_speech_data)": [[46, "src.stt.transform_speech_data.transform_dataset"]], "datacollatorctcwithpadding (class in src.stt.utils)": [[47, "src.stt.utils.DataCollatorCTCWithPadding"]], "eearlystoppingcallbackafternumepochs (class in src.stt.utils)": [[47, "src.stt.utils.EearlyStoppingCallbackAfterNumEpochs"]], "compute_metrics() (in module src.stt.utils)": [[47, "src.stt.utils.compute_metrics"]], "get_device() (in module src.stt.utils)": [[47, "src.stt.utils.get_device"]], "load_datasets() (in module src.stt.utils)": [[47, "src.stt.utils.load_datasets"]], "load_processor() (in module src.stt.utils)": [[47, "src.stt.utils.load_processor"]], "load_trained_model_and_processor_hubert() (in module src.stt.utils)": [[47, "src.stt.utils.load_trained_model_and_processor_hubert"]], "load_trained_model_and_processor_wav2vec2() (in module src.stt.utils)": [[47, "src.stt.utils.load_trained_model_and_processor_wav2vec2"]], "load_trainer() (in module src.stt.utils)": [[47, "src.stt.utils.load_trainer"]], "load_training_args() (in module src.stt.utils)": [[47, "src.stt.utils.load_training_args"]], "on_evaluate() (src.stt.utils.eearlystoppingcallbackafternumepochs method)": [[47, "src.stt.utils.EearlyStoppingCallbackAfterNumEpochs.on_evaluate"]], "src.stt.utils": [[47, "module-src.stt.utils"]], "load_model() (in module src.stt.wav2vec2_training)": [[48, "src.stt.wav2vec2_training.load_model"]], "src.stt.wav2vec2_training": [[48, "module-src.stt.wav2vec2_training"]]}})
