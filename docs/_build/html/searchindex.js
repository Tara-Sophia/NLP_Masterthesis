Search.setIndex({"docnames": ["index", "modules", "src", "src.clf", "src.clf.constants", "src.clf.create_data", "src.clf.evaluation", "src.clf.lr_training", "src.clf.old_train_lr_all", "src.clf.predict", "src.clf.utils", "src.data", "src.data.make_icd_code_dataframes", "src.data.scrape_symptoms", "src.decorators", "src.icd_mimic", "src.icd_mimic.constants", "src.icd_mimic.prepare_mimic", "src.nlp", "src.nlp.cleaning_mimic", "src.nlp.cleaning_mtsamples", "src.nlp.constants", "src.nlp.keybert_mtsamples", "src.nlp.masked_language_model_training", "src.nlp.predicting", "src.nlp.text_classification_model_training", "src.nlp.utils", "src.stt", "src.stt.analyze_data", "src.stt.constants", "src.stt.create_speech_data", "src.stt.evaluate_model", "src.stt.hubert_training", "src.stt.predict", "src.stt.transform_speech_data", "src.stt.utils", "src.stt.wav2vec2_training"], "filenames": ["index.rst", "modules.rst", "src.rst", "src.clf.rst", "src.clf.constants.rst", "src.clf.create_data.rst", "src.clf.evaluation.rst", "src.clf.lr_training.rst", "src.clf.old_train_lr_all.rst", "src.clf.predict.rst", "src.clf.utils.rst", "src.data.rst", "src.data.make_icd_code_dataframes.rst", "src.data.scrape_symptoms.rst", "src.decorators.rst", "src.icd_mimic.rst", "src.icd_mimic.constants.rst", "src.icd_mimic.prepare_mimic.rst", "src.nlp.rst", "src.nlp.cleaning_mimic.rst", "src.nlp.cleaning_mtsamples.rst", "src.nlp.constants.rst", "src.nlp.keybert_mtsamples.rst", "src.nlp.masked_language_model_training.rst", "src.nlp.predicting.rst", "src.nlp.text_classification_model_training.rst", "src.nlp.utils.rst", "src.stt.rst", "src.stt.analyze_data.rst", "src.stt.constants.rst", "src.stt.create_speech_data.rst", "src.stt.evaluate_model.rst", "src.stt.hubert_training.rst", "src.stt.predict.rst", "src.stt.transform_speech_data.rst", "src.stt.utils.rst", "src.stt.wav2vec2_training.rst"], "titles": ["Welcome to Masterthesis\u2019s documentation!", "src", "src package", "src.clf package", "src.clf.constants module", "src.clf.create_data module", "src.clf.evaluation module", "src.clf.lr_training module", "src.clf.old_train_lr_all module", "src.clf.predict module", "src.clf.utils module", "src.data package", "src.data.make_icd_code_dataframes module", "src.data.scrape_symptoms module", "src.decorators module", "src.icd_mimic package", "src.icd_mimic.constants module", "src.icd_mimic.prepare_mimic module", "src.nlp package", "src.nlp.cleaning_mimic module", "src.nlp.cleaning_mtsamples module", "src.nlp.constants module", "src.nlp.keybert_mtsamples module", "src.nlp.masked_language_model_training module", "src.nlp.predicting module", "src.nlp.text_classification_model_training module", "src.nlp.utils module", "src.stt package", "src.stt.analyze_data module", "src.stt.constants module", "src.stt.create_speech_data module", "src.stt.evaluate_model module", "src.stt.hubert_training module", "src.stt.predict module", "src.stt.transform_speech_data module", "src.stt.utils module", "src.stt.wav2vec2_training module"], "terms": {"src": 0, "packag": [0, 1], "subpackag": [0, 1], "submodul": [0, 1], "modul": [0, 1], "index": 0, "search": [0, 7, 8], "page": [0, 13], "clf": [1, 2], "content": 1, "data": [1, 2, 5, 6, 7, 8, 10, 17, 19, 20, 26, 28, 30, 31, 32, 33, 34, 35, 36], "icd_mim": [1, 2], "nlp": [1, 2, 5, 8], "stt": [1, 2], "decor": [1, 2], "log_function_nam": [1, 2, 14], "constant": [2, 3, 15, 18, 27], "create_data": [2, 3], "main": [2, 3, 5, 6, 7, 8, 9, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28], "replace_tab": [2, 3, 5, 8], "transform_column": [2, 3, 5, 8], "evalu": [2, 3, 26, 28, 31, 35], "collect_pr": [2, 3, 6, 8], "compute_accuraci": [2, 3, 6, 8], "compute_mrr_at_k": [2, 3, 6, 8], "get_top_k_predict": [2, 3, 6, 8], "reciprocal_rank": [2, 3, 6], "lr_train": [2, 3], "build_pipelin": [2, 3, 7, 8], "custom_accuracy_funct": [2, 3, 7, 8], "grid_search": [2, 3, 7, 8], "old_train_lr_al": [2, 3], "fit_model": [2, 3, 8], "get_model_metr": [2, 3, 8], "load_data": [2, 3, 8, 10], "predict": [2, 3, 6, 7, 8, 18, 26, 27, 31, 35], "lime_explain": [2, 3, 9], "predict_prob": [2, 3, 9], "top_symptom": [2, 3, 9], "util": [2, 3, 18, 27], "preprocessing_pipelin": [2, 3, 7, 10], "make_icd_code_datafram": [2, 11], "check_valid": [2, 11, 12], "clean_txt_fil": [2, 11, 12], "concat_and_save_df_from_csv": [2, 11, 12], "create_dir": [2, 11, 12, 18, 20, 27, 28], "expand_codes_col": [2, 11, 12], "get_parent_v": [2, 11, 12], "make_df_from_txt": [2, 11, 12], "make_icd_10_csv": [2, 11, 12], "make_icd_9_csv": [2, 11, 12], "save_df": [2, 11, 12, 15, 17, 18, 20], "scrape_symptom": [2, 11], "build_icd_symptoms_datafram": [2, 11, 13], "create_symptoms_col": [2, 11, 13], "get_symptom": [2, 11, 13], "get_symptoms_from_nh": [2, 11, 13], "get_symptoms_from_wiki": [2, 11, 13], "load_cach": [2, 11, 13], "load_datafram": [2, 11, 13, 27, 28], "save_data": [2, 11, 13], "prepare_mim": [2, 15], "clean_icd9": [2, 15, 17], "clean_mimic_diagnos": [2, 15, 17], "clean_mimic_noteev": [2, 15, 17], "merge_diagnoses_icd9": [2, 15, 17], "merge_diagnoses_noteev": [2, 15, 17], "cleaning_mim": [2, 18], "clean_text": [2, 18, 19], "keep_only_text_from_choosen_head": [2, 18, 19], "cleaning_mtsampl": [2, 18], "create_df": [2, 18, 20], "top_class": [2, 18, 20], "keybert_mtsampl": [2, 18], "calculate_optimal_candidate_nr": [2, 18, 22], "keyword_extract": [2, 18, 22], "keywords_from_mlm_model": [2, 18, 22], "keywords_from_tc_model": [2, 18, 22], "save_datafram": [2, 18, 22], "small_column_df": [2, 18, 22], "masked_language_model_train": [2, 18], "load_dataset": [2, 18, 23, 25, 27, 35], "load_model": [2, 18, 23, 25, 27, 32, 36], "tokenize_dataset": [2, 18, 23, 25], "max_length": [2, 18, 24, 35], "text_classification_model_train": [2, 18], "clean_remove_column": [2, 18, 25], "map_medical_specialty_to_label": [2, 18, 25], "cleaning_input": [2, 18, 26], "compute_metr": [2, 18, 26, 27, 35], "get_devic": [2, 18, 26, 27, 35], "load_token": [2, 18, 26], "load_train": [2, 18, 26, 27, 35], "load_training_arg": [2, 18, 26, 27, 35], "tokenize_funct": [2, 18, 26], "analyze_data": [2, 27], "create_chart": [2, 27, 28], "evaluate_audio_sampl": [2, 27, 28], "get_librosa_featur": [2, 27, 28], "load_train_val_test_data": [2, 27, 28], "make_report": [2, 27, 28], "save_report": [2, 27, 28], "transform_datafram": [2, 27, 28], "create_speech_data": [2, 27], "clean_df": [2, 27, 30], "copy_fil": [2, 27, 30], "create_own_dataset": [2, 27, 30], "get_wav_file_dur": [2, 27, 30], "evaluate_model": [2, 27], "get_test_result": [2, 27, 31], "load_test_data": [2, 27, 31], "map_to_result": [2, 27, 31], "show_random_el": [2, 27, 31], "showcase_test": [2, 27, 31], "hubert_train": [2, 27], "transcribe_audio": [2, 27, 33], "transform_speech_data": [2, 27], "create_labels_and_input_valu": [2, 27, 34], "create_vocab": [2, 27, 34], "preprocess_data": [2, 27, 34], "recreate_fold": [2, 27, 34], "remove_special_charact": [2, 27, 34], "save_dataset": [2, 27, 34], "transform_dataset": [2, 27, 34], "datacollatorctcwithpad": [2, 27, 35], "eearlystoppingcallbackafternumepoch": [2, 27, 35], "load_processor": [2, 27, 35], "load_trained_model_and_processor_hubert": [2, 27, 35], "load_trained_model_and_processor_wav2vec2": [2, 27, 35], "wav2vec2_train": [2, 27], "descript": [4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36], "thi": [4, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29], "contain": [4, 16, 17, 21, 29], "us": [4, 5, 9, 10, 16, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36], "folder": [4, 12, 13, 28, 29, 30, 34], "load": [5, 8, 10, 13, 23, 25, 26, 28, 31, 32, 35, 36], "transform": [5, 8, 28, 31, 34, 35], "format": [5, 30], "can": 5, "classifi": 5, "function": [5, 6, 7, 8, 9, 10, 12, 14, 17, 19, 20, 22, 23, 24, 25, 26, 28, 35], "x": [5, 8, 10, 22, 24, 28], "list": [5, 6, 7, 8, 12, 13, 19, 20, 22, 26, 28, 30], "str": [5, 6, 7, 8, 9, 10, 12, 13, 17, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 34, 35], "replac": [5, 12], "space": 5, "underscor": 5, "paramet": [5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 20, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36], "word": [5, 26], "separ": [5, 12], "return": [5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 36], "concaten": [5, 12, 28], "type": [5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 36], "df": [5, 8, 12, 13, 17, 20, 22, 28, 30], "datafram": [5, 8, 9, 12, 13, 17, 20, 22, 25, 28, 30], "column_nam": [5, 8], "column": [5, 8, 12, 13, 20, 22, 25, 28, 30], "pd": [5, 6, 7, 8, 9, 10, 12, 13, 17, 20, 22, 25, 28, 30], "label": [5, 6, 7, 8, 9, 25, 28, 31, 34], "featur": [5, 8, 9, 28, 35], "name": [5, 8, 12, 13, 14, 28, 30], "compar": 6, "perform": [6, 35], "differ": [6, 28], "model": [6, 7, 8, 9, 22, 23, 25, 26, 31, 32, 33, 34, 35, 36], "y_test": [6, 7, 8], "seri": [6, 7, 8, 9, 10, 12, 28], "y_pred": [6, 8], "collect": [6, 8], "all": [6, 8, 12, 13, 16, 21, 25, 26], "ground": [6, 8], "truth": [6, 8], "true": [6, 8, 34, 35], "machin": [6, 8], "eval_item": [6, 8], "float": [6, 7, 8, 26, 28, 30, 35], "comput": [6, 8, 26, 35], "accuraci": [6, 7, 8, 26], "cutoff": [6, 8], "k": [6, 8], "tupl": [6, 8, 10, 22, 23, 25, 28, 30, 34, 35], "item": [6, 8], "mrr": [6, 8], "averag": [6, 8], "rr": [6, 8], "pipelin": [6, 7, 8, 9, 10, 33], "x_test": [6, 7, 8], "int": [6, 8, 22, 28, 31, 35], "get": [6, 8, 9, 12, 26, 28, 30, 35], "top": [6, 8, 9, 20], "each": [6, 8, 9, 22], "test": [6, 7, 8, 28, 30, 31, 34], "sampl": [6, 8, 9, 28], "number": [6, 8, 22, 26, 31, 35], "true_label": 6, "machine_pr": 6, "reciproc": 6, "rank": 6, "train": [7, 8, 9, 20, 23, 25, 26, 28, 30, 31, 32, 34, 35, 36], "logist": [7, 8], "regress": [7, 8], "probabl": [7, 8, 9], "medic": [7, 8, 9, 22, 25], "specialti": [7, 8, 25], "build": [7, 8], "preprocess": [7, 10, 34], "step": [7, 10], "x_train": [7, 8], "y_train": [7, 8], "custom": [7, 8, 24], "scorer": [7, 8], "3": [7, 8], "model_pipelin": [7, 8], "param_grid": [7, 8], "dict": [7, 9, 13, 26, 35], "grid": [7, 8], "best": [7, 8, 9], "usag": [8, 12, 13, 28, 30, 31, 32, 33, 34, 36], "possibl": [8, 12, 13, 30, 31, 32, 33, 34, 36], "argument": [8, 12, 13, 26, 30, 31, 32, 33, 34, 35, 36], "analyz": 8, "countvector": 8, "imblearn": [8, 9], "core": [8, 10, 30], "fit": 8, "best_model": 8, "classif": [8, 25, 26], "report": [8, 28], "gridsearchcv": 8, "file_path": [8, 12, 13, 28, 30], "from": [8, 9, 10, 12, 13, 17, 19, 20, 22, 23, 25, 28, 30, 31, 33, 34, 35], "csv": [8, 10, 12, 13, 17, 20, 22, 25, 28, 30], "file": [8, 10, 12, 13, 17, 20, 22, 25, 26, 28, 30, 33, 34], "path": [8, 10, 12, 13, 17, 20, 22, 23, 25, 28, 30, 31, 34, 35], "save": [9, 12, 13, 17, 20, 22, 26, 28, 30, 32, 34, 36], "show": [9, 31], "per": 9, "class": [9, 20, 23, 25, 35], "gener": 9, "valu": [9, 12, 20, 34], "py": [9, 12, 13, 28, 30, 31, 32, 33, 34, 36], "symptom": [9, 12, 13], "helper": [10, 35], "ar": [10, 12, 20, 26, 30, 35], "multipl": [10, 35], "place": [10, 35], "filepath": 10, "panda": [10, 28, 30], "y": [10, 28], "creat": [10, 12, 13, 20, 28, 34], "scrape": [12, 13], "wikipedia": [12, 13], "nh": [12, 13], "ad": [12, 30], "icd": [12, 13], "code": [12, 13, 17], "The": [12, 13, 17, 20, 23, 25, 26], "interim": [12, 13], "python": [12, 13, 28, 30, 31, 32, 33, 34, 36], "make_icd_codes_datafram": 12, "i9": [12, 13], "icd9": [12, 13, 17], "9": [12, 13], "i10": [12, 13], "icd10": [12, 13], "10": [12, 13], "ser": 12, "func": 12, "callabl": [12, 14], "check": [12, 24, 34, 35], "valid": [12, 23, 25, 26, 28, 30, 34, 35], "base": [12, 20, 23, 35], "invalid": 12, "further": 12, "ancestor": 12, "line": 12, "none": [12, 13, 17, 20, 22, 24, 25, 28, 30, 31, 33, 34, 35], "clean": [12, 17, 19, 20, 26, 30], "txt": 12, "append": 12, "tab": 12, "necessari": 12, "source_folder_path": 12, "target_file_path": 12, "them": 12, "singl": 12, "where": [12, 20, 34], "should": [12, 13, 35], "folder_path": [12, 28, 34], "directori": [12, 20, 23, 26, 28, 35], "doe": [12, 20, 28], "exist": [12, 20, 28, 34], "col": 12, "split": [12, 30], "one": 12, "which": [12, 26], "child": 12, "parent": 12, "csv_folder": 12, "read": [12, 25], "target_folder_path": 12, "storag": 12, "locat": [12, 13], "diseas": 13, "": [13, 30, 32, 34, 36], "bool": [13, 26, 28, 34, 35], "flag": [13, 28], "symptoms_cach": 13, "creation": [13, 30], "cach": 13, "alreadi": 13, "code_d": 13, "sypmtom": 13, "either": 13, "o": 13, "url": 13, "string": 13, "messag": 13, "error": 13, "empti": 13, "dictionari": 13, "todatafram": 13, "fals": 13, "option": [13, 31, 34, 35], "default": [13, 31, 34], "log": 14, "f": 14, "p": 14, "r": 14, "script": [16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 32, 36], "project": [16, 21], "merg": 17, "mimic": [17, 19], "own": 17, "research": 17, "diagnos": 17, "iii": [17, 19], "noteev": 17, "df_mimic_diagnos": 17, "df_icd9": 17, "df_diagnoses_icd9": 17, "df_mimic_noteev": 17, "subject_id": 17, "hadm_id": 17, "dataset": [19, 20, 23, 25, 26, 28, 30, 31, 34, 35], "text": [19, 22, 24, 25], "choosen_head": 19, "keep": [19, 20], "onli": [19, 20, 25], "choosen": 19, "header": 19, "mtsampl": [20, 23, 25], "drop": 20, "nan": 20, "appli": 20, "keyword": [20, 22], "work": 20, "without": 20, "11": 20, "count": 20, "reason": 20, "i": [20, 22, 23, 24, 25, 28], "other": 20, "too": [20, 30], "few": 20, "extract": 22, "transcript": [22, 33], "calcul": 22, "optim": 22, "candid": 22, "param": 22, "nr_candid": 22, "top_n": 22, "input": [22, 24, 26, 34, 35], "sentenc": [22, 26], "mlm": [22, 23], "weight": 22, "tc": 22, "run": 22, "final": 22, "make": 22, "smaller": 22, "than": [22, 24], "512": [22, 24], "token": [22, 23, 24, 25, 26, 35], "It": 23, "huggingfac": [23, 25], "trainer": [23, 25, 26, 35], "data_path": [23, 25, 31, 35], "arrow_dataset": [23, 25, 34, 35], "devic": [23, 25, 26, 31, 32, 35, 36], "bertformaskedlm": 23, "checkpoint": [23, 26, 35], "torch": [23, 25, 26, 31, 32, 35, 36], "autotoken": [23, 25, 26], "longer": 24, "If": 24, "truncat": 24, "tokenized_dataset": 25, "remov": [25, 26, 30, 34], "unned": 25, "need": 25, "automodelforsequenceclassif": [25, 26], "sequenc": [25, 26], "map": [25, 31], "ha": 26, "mutipl": 26, "handmadestopword": 26, "stopword": 26, "punctuat": 26, "lemmat": 26, "modeltyp": 26, "eval_pr": 26, "evalpredict": [26, 35], "mask": 26, "languag": 26, "score": 26, "training_arg": [26, 35], "trainingargu": [26, 35], "train_d": [26, 34, 35], "val_d": [26, 34, 35], "encod": 26, "set": [26, 30, 31], "output_dir": [26, 35], "batch": [26, 31, 34, 35], "special_token": 26, "whether": 26, "add": 26, "special": [26, 34], "on_evalu": [27, 35], "pdf": 28, "about": 28, "col_us": 28, "titl": 28, "xlabel": 28, "ylabel": 28, "hist": 28, "file_nam": 28, "chart": 28, "visual": 28, "between": 28, "val": 28, "indic": 28, "histogram": 28, "row": 28, "audio": [28, 33, 34], "numpi": 28, "ndarrai": 28, "durat": [28, 30], "wav": [28, 30], "arrai": 28, "rate": 28, "np": 28, "filenam": 28, "profilereport": 28, "profil": 28, "an": [28, 33], "html": 28, "speech": [30, 33, 34], "record": 30, "filter": 30, "out": 30, "long": 30, "adjust": 30, "requir": 30, "new": 30, "respect": 30, "copi": 30, "files_list": 30, "raw": 30, "frame": 30, "second": 30, "h": [31, 33], "w": [31, 33], "hubert": [31, 32, 33, 35], "wav2vec2": [31, 33, 34, 35, 36], "result": 31, "wer_metr": 31, "evaluationmodul": 31, "cer_metr": 31, "print": 31, "wer": 31, "cer": 31, "metric": [31, 35], "exampl": [31, 34], "union": [31, 35], "hubertforctc": [31, 32, 35], "wav2vec2forctc": [31, 35, 36], "processor": [31, 32, 34, 35, 36], "wav2vec2processor": [31, 32, 34, 35, 36], "num_exampl": 31, "5": 31, "random": 31, "test_d": [31, 34], "showcas": 31, "pad": [31, 35], "decod": 31, "pipe": 33, "rec": 33, "recogn": 33, "transcrib": 33, "microphon": 33, "recognit": 33, "sr": 33, "processing_wav2vec2": [34, 35], "vocab": 34, "charact": 34, "resampl": 34, "16khz": 34, "recreat": 34, "belong": 34, "process": [34, 35], "max_length_label": 35, "pad_to_multiple_of": 35, "pad_to_multiple_of_label": 35, "object": 35, "collat": 35, "dynam": 35, "receiv": 35, "start_epoch": 35, "arg": 35, "kwarg": 35, "earlystoppingcallback": 35, "callback": 35, "stop": 35, "after": 35, "epoch": 35, "inherit": 35, "state": 35, "trainerst": 35, "control": 35, "trainercontrol": 35, "pred": 35, "dure": 35, "processor_path": 35, "extractor": 35, "modeling_hubert": 35, "modeling_wav2vec2": 35, "data_col": 35, "batch_size_train": 35, "batch_size_v": 35, "num_epoch": 35, "output": 35, "size": 35}, "objects": {"": [[2, 0, 0, "-", "src"]], "src": [[3, 0, 0, "-", "clf"], [11, 0, 0, "-", "data"], [14, 0, 0, "-", "decorators"], [15, 0, 0, "-", "icd_mimic"], [18, 0, 0, "-", "nlp"], [27, 0, 0, "-", "stt"]], "src.clf": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "create_data"], [6, 0, 0, "-", "evaluation"], [7, 0, 0, "-", "lr_training"], [8, 0, 0, "-", "old_train_lr_all"], [9, 0, 0, "-", "predict"], [10, 0, 0, "-", "utils"]], "src.clf.create_data": [[5, 1, 1, "", "main"], [5, 1, 1, "", "replace_tab"], [5, 1, 1, "", "transform_column"]], "src.clf.evaluation": [[6, 1, 1, "", "collect_preds"], [6, 1, 1, "", "compute_accuracy"], [6, 1, 1, "", "compute_mrr_at_k"], [6, 1, 1, "", "get_top_k_predictions"], [6, 1, 1, "", "main"], [6, 1, 1, "", "reciprocal_rank"]], "src.clf.lr_training": [[7, 1, 1, "", "build_pipeline"], [7, 1, 1, "", "custom_accuracy_function"], [7, 1, 1, "", "grid_search"], [7, 1, 1, "", "main"]], "src.clf.old_train_lr_all": [[8, 1, 1, "", "build_pipeline"], [8, 1, 1, "", "collect_preds"], [8, 1, 1, "", "compute_accuracy"], [8, 1, 1, "", "compute_mrr_at_k"], [8, 1, 1, "", "custom_accuracy_function"], [8, 1, 1, "", "fit_model"], [8, 1, 1, "", "get_model_metrics"], [8, 1, 1, "", "get_top_k_predictions"], [8, 1, 1, "", "grid_search"], [8, 1, 1, "", "load_data"], [8, 1, 1, "", "main"], [8, 1, 1, "", "replace_tab"], [8, 1, 1, "", "transform_column"]], "src.clf.predict": [[9, 1, 1, "", "lime_explainer"], [9, 1, 1, "", "main"], [9, 1, 1, "", "predict_probability"], [9, 1, 1, "", "top_symptoms"]], "src.clf.utils": [[10, 1, 1, "", "load_data"], [10, 1, 1, "", "preprocessing_pipeline"]], "src.data": [[12, 0, 0, "-", "make_icd_code_dataframes"], [13, 0, 0, "-", "scrape_symptoms"]], "src.data.make_icd_code_dataframes": [[12, 1, 1, "", "check_valid"], [12, 1, 1, "", "clean_txt_files"], [12, 1, 1, "", "concat_and_save_df_from_csv"], [12, 1, 1, "", "create_dir"], [12, 1, 1, "", "expand_codes_col"], [12, 1, 1, "", "get_parent_vals"], [12, 1, 1, "", "make_df_from_txt"], [12, 1, 1, "", "make_icd_10_csv"], [12, 1, 1, "", "make_icd_9_csv"], [12, 1, 1, "", "save_df"]], "src.data.scrape_symptoms": [[13, 1, 1, "", "build_icd_symptoms_dataframe"], [13, 1, 1, "", "create_symptoms_col"], [13, 1, 1, "", "get_symptoms"], [13, 1, 1, "", "get_symptoms_from_nhs"], [13, 1, 1, "", "get_symptoms_from_wiki"], [13, 1, 1, "", "load_cache"], [13, 1, 1, "", "load_dataframe"], [13, 1, 1, "", "save_data"]], "src.decorators": [[14, 1, 1, "", "log_function_name"]], "src.icd_mimic": [[16, 0, 0, "-", "constants"], [17, 0, 0, "-", "prepare_mimic"]], "src.icd_mimic.prepare_mimic": [[17, 1, 1, "", "clean_icd9"], [17, 1, 1, "", "clean_mimic_diagnoses"], [17, 1, 1, "", "clean_mimic_noteevents"], [17, 1, 1, "", "main"], [17, 1, 1, "", "merge_diagnoses_icd9"], [17, 1, 1, "", "merge_diagnoses_noteevents"], [17, 1, 1, "", "save_df"]], "src.nlp": [[19, 0, 0, "-", "cleaning_mimic"], [20, 0, 0, "-", "cleaning_mtsamples"], [21, 0, 0, "-", "constants"], [22, 0, 0, "-", "keybert_mtsamples"], [23, 0, 0, "-", "masked_language_model_training"], [24, 0, 0, "-", "predicting"], [25, 0, 0, "-", "text_classification_model_training"], [26, 0, 0, "-", "utils"]], "src.nlp.cleaning_mimic": [[19, 1, 1, "", "clean_text"], [19, 1, 1, "", "keep_only_text_from_choosen_headers"], [19, 1, 1, "", "main"]], "src.nlp.cleaning_mtsamples": [[20, 1, 1, "", "create_df"], [20, 1, 1, "", "create_dir"], [20, 1, 1, "", "main"], [20, 1, 1, "", "save_df"], [20, 1, 1, "", "top_classes"]], "src.nlp.keybert_mtsamples": [[22, 1, 1, "", "calculate_optimal_candidate_nr"], [22, 1, 1, "", "keyword_extraction"], [22, 1, 1, "", "keywords_from_MLM_model"], [22, 1, 1, "", "keywords_from_TC_model"], [22, 1, 1, "", "main"], [22, 1, 1, "", "save_dataframe"], [22, 1, 1, "", "small_column_df"]], "src.nlp.masked_language_model_training": [[23, 1, 1, "", "load_datasets"], [23, 1, 1, "", "load_model"], [23, 1, 1, "", "main"], [23, 1, 1, "", "tokenize_dataset"]], "src.nlp.predicting": [[24, 1, 1, "", "main"], [24, 1, 1, "", "max_length"]], "src.nlp.text_classification_model_training": [[25, 1, 1, "", "clean_remove_column"], [25, 1, 1, "", "load_datasets"], [25, 1, 1, "", "load_model"], [25, 1, 1, "", "main"], [25, 1, 1, "", "map_medical_specialty_to_labels"], [25, 1, 1, "", "tokenize_dataset"]], "src.nlp.utils": [[26, 1, 1, "", "cleaning_input"], [26, 1, 1, "", "compute_metrics"], [26, 1, 1, "", "get_device"], [26, 1, 1, "", "load_tokenizer"], [26, 1, 1, "", "load_trainer"], [26, 1, 1, "", "load_training_args"], [26, 1, 1, "", "tokenize_function"]], "src.stt": [[28, 0, 0, "-", "analyze_data"], [29, 0, 0, "-", "constants"], [30, 0, 0, "-", "create_speech_data"], [31, 0, 0, "-", "evaluate_model"], [32, 0, 0, "-", "hubert_training"], [33, 0, 0, "-", "predict"], [34, 0, 0, "-", "transform_speech_data"], [35, 0, 0, "-", "utils"], [36, 0, 0, "-", "wav2vec2_training"]], "src.stt.analyze_data": [[28, 1, 1, "", "create_charts"], [28, 1, 1, "", "create_dir"], [28, 1, 1, "", "evaluate_audio_sample"], [28, 1, 1, "", "get_librosa_features"], [28, 1, 1, "", "load_dataframe"], [28, 1, 1, "", "load_train_val_test_data"], [28, 1, 1, "", "main"], [28, 1, 1, "", "make_report"], [28, 1, 1, "", "save_report"], [28, 1, 1, "", "transform_dataframe"]], "src.stt.create_speech_data": [[30, 1, 1, "", "clean_df"], [30, 1, 1, "", "copy_files"], [30, 1, 1, "", "create_own_dataset"], [30, 1, 1, "", "get_wav_file_duration"]], "src.stt.evaluate_model": [[31, 1, 1, "", "get_test_results"], [31, 1, 1, "", "load_test_data"], [31, 1, 1, "", "map_to_result"], [31, 1, 1, "", "show_random_elements"], [31, 1, 1, "", "showcase_test"]], "src.stt.hubert_training": [[32, 1, 1, "", "load_model"]], "src.stt.predict": [[33, 1, 1, "", "transcribe_audio"]], "src.stt.transform_speech_data": [[34, 1, 1, "", "create_labels_and_input_values"], [34, 1, 1, "", "create_vocab"], [34, 1, 1, "", "preprocess_data"], [34, 1, 1, "", "recreate_folder"], [34, 1, 1, "", "remove_special_characters"], [34, 1, 1, "", "save_datasets"], [34, 1, 1, "", "transform_dataset"]], "src.stt.utils": [[35, 2, 1, "", "DataCollatorCTCWithPadding"], [35, 2, 1, "", "EearlyStoppingCallbackAfterNumEpochs"], [35, 1, 1, "", "compute_metrics"], [35, 1, 1, "", "get_device"], [35, 1, 1, "", "load_datasets"], [35, 1, 1, "", "load_processor"], [35, 1, 1, "", "load_trained_model_and_processor_hubert"], [35, 1, 1, "", "load_trained_model_and_processor_wav2vec2"], [35, 1, 1, "", "load_trainer"], [35, 1, 1, "", "load_training_args"]], "src.stt.utils.EearlyStoppingCallbackAfterNumEpochs": [[35, 3, 1, "", "on_evaluate"]], "src.stt.wav2vec2_training": [[36, 1, 1, "", "load_model"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"welcom": 0, "masterthesi": 0, "": 0, "document": 0, "content": [0, 2, 3, 11, 15, 18, 27], "indic": 0, "tabl": 0, "src": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "packag": [2, 3, 11, 15, 18, 27], "subpackag": 2, "submodul": [2, 3, 11, 15, 18, 27], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "clf": [3, 4, 5, 6, 7, 8, 9, 10], "constant": [4, 16, 21, 29], "create_data": 5, "evalu": 6, "lr_train": 7, "old_train_lr_al": 8, "predict": [9, 24, 33], "util": [10, 26, 35], "data": [11, 12, 13], "make_icd_code_datafram": 12, "scrape_symptom": 13, "decor": 14, "icd_mim": [15, 16, 17], "prepare_mim": 17, "nlp": [18, 19, 20, 21, 22, 23, 24, 25, 26], "cleaning_mim": 19, "cleaning_mtsampl": 20, "keybert_mtsampl": 22, "masked_language_model_train": 23, "text_classification_model_train": 25, "stt": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "analyze_data": 28, "create_speech_data": 30, "evaluate_model": 31, "hubert_train": 32, "transform_speech_data": 34, "wav2vec2_train": 36}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to Masterthesis\u2019s documentation!": [[0, "welcome-to-masterthesis-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "src": [[1, "src"]], "src package": [[2, "src-package"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [11, "submodules"], [15, "submodules"], [18, "submodules"], [27, "submodules"]], "Module contents": [[2, "module-src"], [3, "module-src.clf"], [11, "module-src.data"], [15, "module-src.icd_mimic"], [18, "module-src.nlp"], [27, "module-src.stt"]], "src.clf package": [[3, "src-clf-package"]], "src.clf.constants module": [[4, "module-src.clf.constants"]], "src.clf.create_data module": [[5, "module-src.clf.create_data"]], "src.clf.evaluation module": [[6, "module-src.clf.evaluation"]], "src.clf.lr_training module": [[7, "module-src.clf.lr_training"]], "src.clf.old_train_lr_all module": [[8, "module-src.clf.old_train_lr_all"]], "src.clf.predict module": [[9, "module-src.clf.predict"]], "src.clf.utils module": [[10, "module-src.clf.utils"]], "src.data package": [[11, "src-data-package"]], "src.data.make_icd_code_dataframes module": [[12, "module-src.data.make_icd_code_dataframes"]], "src.data.scrape_symptoms module": [[13, "module-src.data.scrape_symptoms"]], "src.decorators module": [[14, "module-src.decorators"]], "src.icd_mimic package": [[15, "src-icd-mimic-package"]], "src.icd_mimic.constants module": [[16, "module-src.icd_mimic.constants"]], "src.icd_mimic.prepare_mimic module": [[17, "module-src.icd_mimic.prepare_mimic"]], "src.nlp package": [[18, "src-nlp-package"]], "src.nlp.cleaning_mimic module": [[19, "module-src.nlp.cleaning_mimic"]], "src.nlp.cleaning_mtsamples module": [[20, "module-src.nlp.cleaning_mtsamples"]], "src.nlp.constants module": [[21, "module-src.nlp.constants"]], "src.nlp.keybert_mtsamples module": [[22, "module-src.nlp.keybert_mtsamples"]], "src.nlp.masked_language_model_training module": [[23, "module-src.nlp.masked_language_model_training"]], "src.nlp.predicting module": [[24, "module-src.nlp.predicting"]], "src.nlp.text_classification_model_training module": [[25, "module-src.nlp.text_classification_model_training"]], "src.nlp.utils module": [[26, "module-src.nlp.utils"]], "src.stt package": [[27, "src-stt-package"]], "src.stt.analyze_data module": [[28, "module-src.stt.analyze_data"]], "src.stt.constants module": [[29, "module-src.stt.constants"]], "src.stt.create_speech_data module": [[30, "module-src.stt.create_speech_data"]], "src.stt.evaluate_model module": [[31, "module-src.stt.evaluate_model"]], "src.stt.hubert_training module": [[32, "module-src.stt.hubert_training"]], "src.stt.predict module": [[33, "module-src.stt.predict"]], "src.stt.transform_speech_data module": [[34, "module-src.stt.transform_speech_data"]], "src.stt.utils module": [[35, "module-src.stt.utils"]], "src.stt.wav2vec2_training module": [[36, "module-src.stt.wav2vec2_training"]]}, "indexentries": {"module": [[2, "module-src"], [3, "module-src.clf"], [4, "module-src.clf.constants"], [5, "module-src.clf.create_data"], [6, "module-src.clf.evaluation"], [7, "module-src.clf.lr_training"], [8, "module-src.clf.old_train_lr_all"], [9, "module-src.clf.predict"], [10, "module-src.clf.utils"], [11, "module-src.data"], [12, "module-src.data.make_icd_code_dataframes"], [13, "module-src.data.scrape_symptoms"], [14, "module-src.decorators"], [15, "module-src.icd_mimic"], [16, "module-src.icd_mimic.constants"], [17, "module-src.icd_mimic.prepare_mimic"], [18, "module-src.nlp"], [19, "module-src.nlp.cleaning_mimic"], [20, "module-src.nlp.cleaning_mtsamples"], [21, "module-src.nlp.constants"], [22, "module-src.nlp.keybert_mtsamples"], [23, "module-src.nlp.masked_language_model_training"], [24, "module-src.nlp.predicting"], [25, "module-src.nlp.text_classification_model_training"], [26, "module-src.nlp.utils"], [27, "module-src.stt"], [28, "module-src.stt.analyze_data"], [29, "module-src.stt.constants"], [30, "module-src.stt.create_speech_data"], [31, "module-src.stt.evaluate_model"], [32, "module-src.stt.hubert_training"], [33, "module-src.stt.predict"], [34, "module-src.stt.transform_speech_data"], [35, "module-src.stt.utils"], [36, "module-src.stt.wav2vec2_training"]], "src": [[2, "module-src"]], "src.clf": [[3, "module-src.clf"]], "src.clf.constants": [[4, "module-src.clf.constants"]], "main() (in module src.clf.create_data)": [[5, "src.clf.create_data.main"]], "replace_tab() (in module src.clf.create_data)": [[5, "src.clf.create_data.replace_tab"]], "src.clf.create_data": [[5, "module-src.clf.create_data"]], "transform_column() (in module src.clf.create_data)": [[5, "src.clf.create_data.transform_column"]], "collect_preds() (in module src.clf.evaluation)": [[6, "src.clf.evaluation.collect_preds"]], "compute_accuracy() (in module src.clf.evaluation)": [[6, "src.clf.evaluation.compute_accuracy"]], "compute_mrr_at_k() (in module src.clf.evaluation)": [[6, "src.clf.evaluation.compute_mrr_at_k"]], "get_top_k_predictions() (in module src.clf.evaluation)": [[6, "src.clf.evaluation.get_top_k_predictions"]], "main() (in module src.clf.evaluation)": [[6, "src.clf.evaluation.main"]], "reciprocal_rank() (in module src.clf.evaluation)": [[6, "src.clf.evaluation.reciprocal_rank"]], "src.clf.evaluation": [[6, "module-src.clf.evaluation"]], "build_pipeline() (in module src.clf.lr_training)": [[7, "src.clf.lr_training.build_pipeline"]], "custom_accuracy_function() (in module src.clf.lr_training)": [[7, "src.clf.lr_training.custom_accuracy_function"]], "grid_search() (in module src.clf.lr_training)": [[7, "src.clf.lr_training.grid_search"]], "main() (in module src.clf.lr_training)": [[7, "src.clf.lr_training.main"]], "src.clf.lr_training": [[7, "module-src.clf.lr_training"]], "build_pipeline() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.build_pipeline"]], "collect_preds() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.collect_preds"]], "compute_accuracy() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.compute_accuracy"]], "compute_mrr_at_k() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.compute_mrr_at_k"]], "custom_accuracy_function() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.custom_accuracy_function"]], "fit_model() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.fit_model"]], "get_model_metrics() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.get_model_metrics"]], "get_top_k_predictions() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.get_top_k_predictions"]], "grid_search() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.grid_search"]], "load_data() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.load_data"]], "main() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.main"]], "replace_tab() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.replace_tab"]], "src.clf.old_train_lr_all": [[8, "module-src.clf.old_train_lr_all"]], "transform_column() (in module src.clf.old_train_lr_all)": [[8, "src.clf.old_train_lr_all.transform_column"]], "lime_explainer() (in module src.clf.predict)": [[9, "src.clf.predict.lime_explainer"]], "main() (in module src.clf.predict)": [[9, "src.clf.predict.main"]], "predict_probability() (in module src.clf.predict)": [[9, "src.clf.predict.predict_probability"]], "src.clf.predict": [[9, "module-src.clf.predict"]], "top_symptoms() (in module src.clf.predict)": [[9, "src.clf.predict.top_symptoms"]], "load_data() (in module src.clf.utils)": [[10, "src.clf.utils.load_data"]], "preprocessing_pipeline() (in module src.clf.utils)": [[10, "src.clf.utils.preprocessing_pipeline"]], "src.clf.utils": [[10, "module-src.clf.utils"]], "src.data": [[11, "module-src.data"]], "check_valid() (in module src.data.make_icd_code_dataframes)": [[12, "src.data.make_icd_code_dataframes.check_valid"]], "clean_txt_files() (in module src.data.make_icd_code_dataframes)": [[12, "src.data.make_icd_code_dataframes.clean_txt_files"]], "concat_and_save_df_from_csv() (in module src.data.make_icd_code_dataframes)": [[12, "src.data.make_icd_code_dataframes.concat_and_save_df_from_csv"]], "create_dir() (in module src.data.make_icd_code_dataframes)": [[12, "src.data.make_icd_code_dataframes.create_dir"]], "expand_codes_col() (in module src.data.make_icd_code_dataframes)": [[12, "src.data.make_icd_code_dataframes.expand_codes_col"]], "get_parent_vals() (in module src.data.make_icd_code_dataframes)": [[12, "src.data.make_icd_code_dataframes.get_parent_vals"]], "make_df_from_txt() (in module src.data.make_icd_code_dataframes)": [[12, "src.data.make_icd_code_dataframes.make_df_from_txt"]], "make_icd_10_csv() (in module src.data.make_icd_code_dataframes)": [[12, "src.data.make_icd_code_dataframes.make_icd_10_csv"]], "make_icd_9_csv() (in module src.data.make_icd_code_dataframes)": [[12, "src.data.make_icd_code_dataframes.make_icd_9_csv"]], "save_df() (in module src.data.make_icd_code_dataframes)": [[12, "src.data.make_icd_code_dataframes.save_df"]], "src.data.make_icd_code_dataframes": [[12, "module-src.data.make_icd_code_dataframes"]], "build_icd_symptoms_dataframe() (in module src.data.scrape_symptoms)": [[13, "src.data.scrape_symptoms.build_icd_symptoms_dataframe"]], "create_symptoms_col() (in module src.data.scrape_symptoms)": [[13, "src.data.scrape_symptoms.create_symptoms_col"]], "get_symptoms() (in module src.data.scrape_symptoms)": [[13, "src.data.scrape_symptoms.get_symptoms"]], "get_symptoms_from_nhs() (in module src.data.scrape_symptoms)": [[13, "src.data.scrape_symptoms.get_symptoms_from_nhs"]], "get_symptoms_from_wiki() (in module src.data.scrape_symptoms)": [[13, "src.data.scrape_symptoms.get_symptoms_from_wiki"]], "load_cache() (in module src.data.scrape_symptoms)": [[13, "src.data.scrape_symptoms.load_cache"]], "load_dataframe() (in module src.data.scrape_symptoms)": [[13, "src.data.scrape_symptoms.load_dataframe"]], "save_data() (in module src.data.scrape_symptoms)": [[13, "src.data.scrape_symptoms.save_data"]], "src.data.scrape_symptoms": [[13, "module-src.data.scrape_symptoms"]], "log_function_name() (in module src.decorators)": [[14, "src.decorators.log_function_name"]], "src.decorators": [[14, "module-src.decorators"]], "src.icd_mimic": [[15, "module-src.icd_mimic"]], "src.icd_mimic.constants": [[16, "module-src.icd_mimic.constants"]], "clean_icd9() (in module src.icd_mimic.prepare_mimic)": [[17, "src.icd_mimic.prepare_mimic.clean_icd9"]], "clean_mimic_diagnoses() (in module src.icd_mimic.prepare_mimic)": [[17, "src.icd_mimic.prepare_mimic.clean_mimic_diagnoses"]], "clean_mimic_noteevents() (in module src.icd_mimic.prepare_mimic)": [[17, "src.icd_mimic.prepare_mimic.clean_mimic_noteevents"]], "main() (in module src.icd_mimic.prepare_mimic)": [[17, "src.icd_mimic.prepare_mimic.main"]], "merge_diagnoses_icd9() (in module src.icd_mimic.prepare_mimic)": [[17, "src.icd_mimic.prepare_mimic.merge_diagnoses_icd9"]], "merge_diagnoses_noteevents() (in module src.icd_mimic.prepare_mimic)": [[17, "src.icd_mimic.prepare_mimic.merge_diagnoses_noteevents"]], "save_df() (in module src.icd_mimic.prepare_mimic)": [[17, "src.icd_mimic.prepare_mimic.save_df"]], "src.icd_mimic.prepare_mimic": [[17, "module-src.icd_mimic.prepare_mimic"]], "src.nlp": [[18, "module-src.nlp"]], "clean_text() (in module src.nlp.cleaning_mimic)": [[19, "src.nlp.cleaning_mimic.clean_text"]], "keep_only_text_from_choosen_headers() (in module src.nlp.cleaning_mimic)": [[19, "src.nlp.cleaning_mimic.keep_only_text_from_choosen_headers"]], "main() (in module src.nlp.cleaning_mimic)": [[19, "src.nlp.cleaning_mimic.main"]], "src.nlp.cleaning_mimic": [[19, "module-src.nlp.cleaning_mimic"]], "create_df() (in module src.nlp.cleaning_mtsamples)": [[20, "src.nlp.cleaning_mtsamples.create_df"]], "create_dir() (in module src.nlp.cleaning_mtsamples)": [[20, "src.nlp.cleaning_mtsamples.create_dir"]], "main() (in module src.nlp.cleaning_mtsamples)": [[20, "src.nlp.cleaning_mtsamples.main"]], "save_df() (in module src.nlp.cleaning_mtsamples)": [[20, "src.nlp.cleaning_mtsamples.save_df"]], "src.nlp.cleaning_mtsamples": [[20, "module-src.nlp.cleaning_mtsamples"]], "top_classes() (in module src.nlp.cleaning_mtsamples)": [[20, "src.nlp.cleaning_mtsamples.top_classes"]], "src.nlp.constants": [[21, "module-src.nlp.constants"]], "calculate_optimal_candidate_nr() (in module src.nlp.keybert_mtsamples)": [[22, "src.nlp.keybert_mtsamples.calculate_optimal_candidate_nr"]], "keyword_extraction() (in module src.nlp.keybert_mtsamples)": [[22, "src.nlp.keybert_mtsamples.keyword_extraction"]], "keywords_from_mlm_model() (in module src.nlp.keybert_mtsamples)": [[22, "src.nlp.keybert_mtsamples.keywords_from_MLM_model"]], "keywords_from_tc_model() (in module src.nlp.keybert_mtsamples)": [[22, "src.nlp.keybert_mtsamples.keywords_from_TC_model"]], "main() (in module src.nlp.keybert_mtsamples)": [[22, "src.nlp.keybert_mtsamples.main"]], "save_dataframe() (in module src.nlp.keybert_mtsamples)": [[22, "src.nlp.keybert_mtsamples.save_dataframe"]], "small_column_df() (in module src.nlp.keybert_mtsamples)": [[22, "src.nlp.keybert_mtsamples.small_column_df"]], "src.nlp.keybert_mtsamples": [[22, "module-src.nlp.keybert_mtsamples"]], "load_datasets() (in module src.nlp.masked_language_model_training)": [[23, "src.nlp.masked_language_model_training.load_datasets"]], "load_model() (in module src.nlp.masked_language_model_training)": [[23, "src.nlp.masked_language_model_training.load_model"]], "main() (in module src.nlp.masked_language_model_training)": [[23, "src.nlp.masked_language_model_training.main"]], "src.nlp.masked_language_model_training": [[23, "module-src.nlp.masked_language_model_training"]], "tokenize_dataset() (in module src.nlp.masked_language_model_training)": [[23, "src.nlp.masked_language_model_training.tokenize_dataset"]], "main() (in module src.nlp.predicting)": [[24, "src.nlp.predicting.main"]], "max_length() (in module src.nlp.predicting)": [[24, "src.nlp.predicting.max_length"]], "src.nlp.predicting": [[24, "module-src.nlp.predicting"]], "clean_remove_column() (in module src.nlp.text_classification_model_training)": [[25, "src.nlp.text_classification_model_training.clean_remove_column"]], "load_datasets() (in module src.nlp.text_classification_model_training)": [[25, "src.nlp.text_classification_model_training.load_datasets"]], "load_model() (in module src.nlp.text_classification_model_training)": [[25, "src.nlp.text_classification_model_training.load_model"]], "main() (in module src.nlp.text_classification_model_training)": [[25, "src.nlp.text_classification_model_training.main"]], "map_medical_specialty_to_labels() (in module src.nlp.text_classification_model_training)": [[25, "src.nlp.text_classification_model_training.map_medical_specialty_to_labels"]], "src.nlp.text_classification_model_training": [[25, "module-src.nlp.text_classification_model_training"]], "tokenize_dataset() (in module src.nlp.text_classification_model_training)": [[25, "src.nlp.text_classification_model_training.tokenize_dataset"]], "cleaning_input() (in module src.nlp.utils)": [[26, "src.nlp.utils.cleaning_input"]], "compute_metrics() (in module src.nlp.utils)": [[26, "src.nlp.utils.compute_metrics"]], "get_device() (in module src.nlp.utils)": [[26, "src.nlp.utils.get_device"]], "load_tokenizer() (in module src.nlp.utils)": [[26, "src.nlp.utils.load_tokenizer"]], "load_trainer() (in module src.nlp.utils)": [[26, "src.nlp.utils.load_trainer"]], "load_training_args() (in module src.nlp.utils)": [[26, "src.nlp.utils.load_training_args"]], "src.nlp.utils": [[26, "module-src.nlp.utils"]], "tokenize_function() (in module src.nlp.utils)": [[26, "src.nlp.utils.tokenize_function"]], "src.stt": [[27, "module-src.stt"]], "create_charts() (in module src.stt.analyze_data)": [[28, "src.stt.analyze_data.create_charts"]], "create_dir() (in module src.stt.analyze_data)": [[28, "src.stt.analyze_data.create_dir"]], "evaluate_audio_sample() (in module src.stt.analyze_data)": [[28, "src.stt.analyze_data.evaluate_audio_sample"]], "get_librosa_features() (in module src.stt.analyze_data)": [[28, "src.stt.analyze_data.get_librosa_features"]], "load_dataframe() (in module src.stt.analyze_data)": [[28, "src.stt.analyze_data.load_dataframe"]], "load_train_val_test_data() (in module src.stt.analyze_data)": [[28, "src.stt.analyze_data.load_train_val_test_data"]], "main() (in module src.stt.analyze_data)": [[28, "src.stt.analyze_data.main"]], "make_report() (in module src.stt.analyze_data)": [[28, "src.stt.analyze_data.make_report"]], "save_report() (in module src.stt.analyze_data)": [[28, "src.stt.analyze_data.save_report"]], "src.stt.analyze_data": [[28, "module-src.stt.analyze_data"]], "transform_dataframe() (in module src.stt.analyze_data)": [[28, "src.stt.analyze_data.transform_dataframe"]], "src.stt.constants": [[29, "module-src.stt.constants"]], "clean_df() (in module src.stt.create_speech_data)": [[30, "src.stt.create_speech_data.clean_df"]], "copy_files() (in module src.stt.create_speech_data)": [[30, "src.stt.create_speech_data.copy_files"]], "create_own_dataset() (in module src.stt.create_speech_data)": [[30, "src.stt.create_speech_data.create_own_dataset"]], "get_wav_file_duration() (in module src.stt.create_speech_data)": [[30, "src.stt.create_speech_data.get_wav_file_duration"]], "src.stt.create_speech_data": [[30, "module-src.stt.create_speech_data"]], "get_test_results() (in module src.stt.evaluate_model)": [[31, "src.stt.evaluate_model.get_test_results"]], "load_test_data() (in module src.stt.evaluate_model)": [[31, "src.stt.evaluate_model.load_test_data"]], "map_to_result() (in module src.stt.evaluate_model)": [[31, "src.stt.evaluate_model.map_to_result"]], "show_random_elements() (in module src.stt.evaluate_model)": [[31, "src.stt.evaluate_model.show_random_elements"]], "showcase_test() (in module src.stt.evaluate_model)": [[31, "src.stt.evaluate_model.showcase_test"]], "src.stt.evaluate_model": [[31, "module-src.stt.evaluate_model"]], "load_model() (in module src.stt.hubert_training)": [[32, "src.stt.hubert_training.load_model"]], "src.stt.hubert_training": [[32, "module-src.stt.hubert_training"]], "src.stt.predict": [[33, "module-src.stt.predict"]], "transcribe_audio() (in module src.stt.predict)": [[33, "src.stt.predict.transcribe_audio"]], "create_labels_and_input_values() (in module src.stt.transform_speech_data)": [[34, "src.stt.transform_speech_data.create_labels_and_input_values"]], "create_vocab() (in module src.stt.transform_speech_data)": [[34, "src.stt.transform_speech_data.create_vocab"]], "preprocess_data() (in module src.stt.transform_speech_data)": [[34, "src.stt.transform_speech_data.preprocess_data"]], "recreate_folder() (in module src.stt.transform_speech_data)": [[34, "src.stt.transform_speech_data.recreate_folder"]], "remove_special_characters() (in module src.stt.transform_speech_data)": [[34, "src.stt.transform_speech_data.remove_special_characters"]], "save_datasets() (in module src.stt.transform_speech_data)": [[34, "src.stt.transform_speech_data.save_datasets"]], "src.stt.transform_speech_data": [[34, "module-src.stt.transform_speech_data"]], "transform_dataset() (in module src.stt.transform_speech_data)": [[34, "src.stt.transform_speech_data.transform_dataset"]], "datacollatorctcwithpadding (class in src.stt.utils)": [[35, "src.stt.utils.DataCollatorCTCWithPadding"]], "eearlystoppingcallbackafternumepochs (class in src.stt.utils)": [[35, "src.stt.utils.EearlyStoppingCallbackAfterNumEpochs"]], "compute_metrics() (in module src.stt.utils)": [[35, "src.stt.utils.compute_metrics"]], "get_device() (in module src.stt.utils)": [[35, "src.stt.utils.get_device"]], "load_datasets() (in module src.stt.utils)": [[35, "src.stt.utils.load_datasets"]], "load_processor() (in module src.stt.utils)": [[35, "src.stt.utils.load_processor"]], "load_trained_model_and_processor_hubert() (in module src.stt.utils)": [[35, "src.stt.utils.load_trained_model_and_processor_hubert"]], "load_trained_model_and_processor_wav2vec2() (in module src.stt.utils)": [[35, "src.stt.utils.load_trained_model_and_processor_wav2vec2"]], "load_trainer() (in module src.stt.utils)": [[35, "src.stt.utils.load_trainer"]], "load_training_args() (in module src.stt.utils)": [[35, "src.stt.utils.load_training_args"]], "on_evaluate() (src.stt.utils.eearlystoppingcallbackafternumepochs method)": [[35, "src.stt.utils.EearlyStoppingCallbackAfterNumEpochs.on_evaluate"]], "src.stt.utils": [[35, "module-src.stt.utils"]], "load_model() (in module src.stt.wav2vec2_training)": [[36, "src.stt.wav2vec2_training.load_model"]], "src.stt.wav2vec2_training": [[36, "module-src.stt.wav2vec2_training"]]}})